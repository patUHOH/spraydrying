function out = model
%
% Dryer_laminarAir_heatAndMoisture_withParticles_jumps_matlab.m
%
% Model exported on Oct 2 2024, 13:25 by COMSOL 6.1.0.357.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('C:\Users\Arthur Lepsien\Nextcloud');

model.label('Dryer_laminarAir_heatAndMoisture_withParticles_jumps.mph');

model.param.set('d_glass', '3[cm]', 'Thickness of the glass');
model.param.set('h_rect', '1[m]', 'Height of the rectangular part');
model.param.set('h_trapz', '0.3[m]', 'Height of the trapzeoidal part');
model.param.set('w_rect', '0.4[m]', 'Width of the rectangular part');
model.param.set('w_trapz_bottom', '0.2[m]', 'Width of outlet');
model.param.set('T_amb', '20[degC]', 'Ambient Temperature');
model.param.set('T_inlet', '100[degC]', 'Inlet Temperature');
model.param.set('T_tower_start', '100[degC]', 'Tower Temperature at Start');
model.param.set('m_dot_inlet', '0.01166[kg/s]', 'Inlet Air Mass Flow');
model.param.set('t_step', '5[s]', 'Step function length');
model.param.set('stepsize', '0.1[s]', 'Time discretization step size');
model.param.set('t_spray_start', '20[s]', 'Start point for spraying particles');
model.param.set('t_spray_end', '30[s]', 'End point for spraying particles');
model.param.set('t_sim', '60[s]', 'Simulation Time');
model.param.set('N_spray_number', '10', 'Number of times particles are sprayed');
model.param.set('N_bins', '40', 'Number of bins for the distribution');
model.param.set('N_particles_per_spray', '2000', 'Number of particles per spray');
model.param.set('dt_spray', '(N_spray_number+1)[s^2]/(t_spray_end-t_spray_start)');
model.param.set('r', '30', 'Number of modes for the reduced order model');
model.param.set('P_amb', '1[atm]', 'Ambient pressure');
model.param.set('S_in', '0', 'Inlet concentration');
model.param.set('dotv_pin', '10[ml/min]', 'Inlet particle flow');
model.param.set('m_dot_spray', 'dotv_pin*rho_w');
model.param.set('rho_w', '1[g/ml]', 'Density of water');
model.param.set('ratio_mdot', 'm_dot_spray/m_dot_inlet', 'Ratio air spray rate');
model.param.set('initial_particle_speed', '-0.5[m/s]', 'Initial Particle Speed');

model.component.create('comp1', true);

model.component('comp1').geom.create('geom1', 2);

model.result.table.create('tbl1', 'Table');
model.result.table.create('evl2', 'Table');
model.result.table.create('for1', 'Table');
model.result.table.create('tbl2', 'Table');
model.result.evaluationGroup.create('eg1', 'EvaluationGroup');
model.result.evaluationGroup('eg1').create('sys1', 'SystemMatrix');

model.func.create('pw2', 'Piecewise');
model.func.create('pw3', 'Piecewise');
model.func.create('an1', 'Analytic');
model.func('pw2').label('Inlet Temperature Steps');
model.func('pw2').set('funcname', 'T_inlet_steps');
model.func('pw2').set('smooth', 'contd2');
model.func('pw2').set('smoothzone', 0.2);
model.func('pw2').set('smoothends', true);
model.func('pw2').set('pieces', {'0' '0.1' '1.0';  ...
'0.1' '2*t_step' '1.1';  ...
'2*t_step' '3*t_step' '1.2';  ...
'3*t_step' '4*t_step' '1.1';  ...
'4*t_step' '5*t_step' '1'});
model.func('pw3').label('Particle releases');
model.func('pw3').set('funcname', 'particle_releases');
model.func('pw3').set('pieces', {'0' 't_spray_start-1/2*stepsize' '0';  ...
't_spray_start-1/2*stepsize' 't_spray_start+1/2*stepsize' '1';  ...
't_spray_start+1/2*stepsize' 't_spray_start+dt_spray-1/2*stepsize' '0';  ...
't_spray_start+dt_spray-1/2*stepsize' 't_spray_start+dt_spray+1/2*stepsize' '1';  ...
't_spray_start+dt_spray+1/2*stepsize' 't_spray_start+2*dt_spray-1/2*stepsize' '0';  ...
't_spray_start+2*dt_spray-1/2*stepsize' 't_spray_start+2*dt_spray+1/2*stepsize' '1';  ...
't_spray_start+2*dt_spray+1/2*stepsize' 't_spray_start+3*dt_spray-1/2*stepsize' '0';  ...
't_spray_start+3*dt_spray-1/2*stepsize' 't_spray_start+3*dt_spray+1/2*stepsize' '1';  ...
't_spray_start+3*dt_spray+1/2*stepsize' 't_spray_start+4*dt_spray-1/2*stepsize' '0';  ...
't_spray_start+4*dt_spray-1/2*stepsize' 't_spray_start+4*dt_spray+1/2*stepsize' '1';  ...
't_spray_start+4*dt_spray+1/2*stepsize' 't_spray_start+5*dt_spray-1/2*stepsize' '0';  ...
't_spray_start+5*dt_spray-1/2*stepsize' 't_spray_start+5*dt_spray+1/2*stepsize' '1';  ...
't_spray_start+5*dt_spray+1/2*stepsize' 't_spray_start+6*dt_spray-1/2*stepsize' '0';  ...
't_spray_start+6*dt_spray-1/2*stepsize' 't_spray_start+6*dt_spray+1/2*stepsize' '1';  ...
't_spray_start+6*dt_spray+1/2*stepsize' 't_spray_start+7*dt_spray-1/2*stepsize' '0';  ...
't_spray_start+7*dt_spray-1/2*stepsize' 't_spray_start+7*dt_spray+1/2*stepsize' '1';  ...
't_spray_start+7*dt_spray+1/2*stepsize' 't_spray_start+8*dt_spray-1/2*stepsize' '0';  ...
't_spray_start+8*dt_spray-1/2*stepsize' 't_spray_start+8*dt_spray+1/2*stepsize' '1';  ...
't_spray_start+8*dt_spray+1/2*stepsize' 't_spray_start+9*dt_spray-1/2*stepsize' '0';  ...
't_spray_start+9*dt_spray-1/2*stepsize' 't_spray_start+9*dt_spray+1/2*stepsize' '1';  ...
't_spray_start+9*dt_spray+1/2*stepsize' 't_spray_start+10*dt_spray-1/2*stepsize' '0'});
model.func('an1').label('Temperature Steps');
model.func('an1').set('funcname', 'Tsteps');
model.func('an1').set('expr', 'T_inlet_steps(t[1/s])*T_inlet');
model.func('an1').set('args', {'t'});
model.func('an1').set('argunit', {''});
model.func('an1').set('plotargs', {'t' '0' 't_sim'});

model.component('comp1').mesh.create('mesh1');

model.component('comp1').geom('geom1').useConstrDim(true);
model.component('comp1').geom('geom1').create('r4', 'Rectangle');
model.component('comp1').geom('geom1').feature('r4').label('Outer Infinte Element');
model.component('comp1').geom('geom1').feature('r4').set('size', [2.2 2]);
model.component('comp1').geom('geom1').create('r5', 'Rectangle');
model.component('comp1').geom('geom1').feature('r5').label('Inner Infinite Element 1');
model.component('comp1').geom('geom1').feature('r5').set('size', [2.1 1.9]);
model.component('comp1').geom('geom1').create('r6', 'Rectangle');
model.component('comp1').geom('geom1').feature('r6').label('Inner Infinite Element 2');
model.component('comp1').geom('geom1').feature('r6').set('size', [0.1 2]);
model.component('comp1').geom('geom1').create('r7', 'Rectangle');
model.component('comp1').geom('geom1').feature('r7').label('Inner Infinite Element 3');
model.component('comp1').geom('geom1').feature('r7').set('size', [2.2 0.1]);
model.component('comp1').geom('geom1').create('sq1', 'Square');
model.component('comp1').geom('geom1').feature('sq1').label('Inner Infinite Element 4');
model.component('comp1').geom('geom1').feature('sq1').set('pos', [2.1 1.9]);
model.component('comp1').geom('geom1').feature('sq1').set('size', 0.1);
model.component('comp1').geom('geom1').create('r1', 'Rectangle');
model.component('comp1').geom('geom1').feature('r1').label('Dryer Top');
model.component('comp1').geom('geom1').feature('r1').set('pos', {'1.1' '1.1+h_trapz'});
model.component('comp1').geom('geom1').feature('r1').set('base', 'center');
model.component('comp1').geom('geom1').feature('r1').set('size', {'w_rect' 'h_rect'});
model.component('comp1').geom('geom1').create('pol1', 'Polygon');
model.component('comp1').geom('geom1').feature('pol1').label('Dryer Bottom');
model.component('comp1').geom('geom1').feature('pol1').set('source', 'table');
model.component('comp1').geom('geom1').feature('pol1').set('table', {'0.9' '0.9'; '0.9+w_trapz_bottom/2' '0.9-h_trapz'; '0.9+w_trapz_bottom*3/2' '0.9-h_trapz'; '0.9+w_rect' '0.9'});
model.component('comp1').geom('geom1').create('r2', 'Rectangle');
model.component('comp1').geom('geom1').feature('r2').label('Glass Side Top');
model.component('comp1').geom('geom1').feature('r2').set('pos', {'1.1' '1.1+h_trapz'});
model.component('comp1').geom('geom1').feature('r2').set('base', 'center');
model.component('comp1').geom('geom1').feature('r2').set('size', {'w_rect+d_glass*2' 'h_rect'});
model.component('comp1').geom('geom1').create('pol2', 'Polygon');
model.component('comp1').geom('geom1').feature('pol2').label('Glass Side Bottom');
model.component('comp1').geom('geom1').feature('pol2').set('source', 'table');
model.component('comp1').geom('geom1').feature('pol2').set('table', {'0.9-d_glass' '0.9'; '0.9+w_trapz_bottom/2-d_glass' '0.9-h_trapz'; '0.9+w_trapz_bottom*3/2+d_glass' '0.9-h_trapz'; '0.9+w_rect+d_glass' '0.9'});
model.component('comp1').geom('geom1').create('r3', 'Rectangle');
model.component('comp1').geom('geom1').feature('r3').active(false);
model.component('comp1').geom('geom1').feature('r3').label('Air Heat Source');
model.component('comp1').geom('geom1').feature('r3').set('pos', {'1.1' '1.1+h_trapz+h_rect/2+d_glass/2'});
model.component('comp1').geom('geom1').feature('r3').set('base', 'center');
model.component('comp1').geom('geom1').feature('r3').set('size', {'w_rect' 'd_glass'});
model.component('comp1').geom('geom1').create('pt2', 'Point');
model.component('comp1').geom('geom1').feature('pt2').label('Nozzle');
model.component('comp1').geom('geom1').feature('pt2').set('p', [1.1 1.9]);
model.component('comp1').geom('geom1').create('pt3', 'Point');
model.component('comp1').geom('geom1').feature('pt3').label('Glass Sensor 1');
model.component('comp1').geom('geom1').feature('pt3').set('p', [0.9 1.4]);
model.component('comp1').geom('geom1').create('pt4', 'Point');
model.component('comp1').geom('geom1').feature('pt4').label('Glass Sensor 2');
model.component('comp1').geom('geom1').feature('pt4').set('p', [1.3 1.7]);
model.component('comp1').geom('geom1').run;

model.component('comp1').variable.create('var1');
model.component('comp1').variable('var1').set('Toutlet', 'comp1.ppb1', 'Outlet Temperaure Probe');
model.component('comp1').variable('var1').set('Tleft', 'comp1.ppb2', 'Left Wall Temperature Probe');
model.component('comp1').variable('var1').set('Tright', 'comp1.ppb3', 'Right Wall Temperature Probe');

model.component('comp1').material.create('mat1', 'Common');
model.component('comp1').material.create('mat2', 'Common');
model.component('comp1').material.create('mat3', 'Common');
model.component('comp1').material.create('mat4', 'Common');
model.component('comp1').material('mat1').propertyGroup('def').func.create('eta', 'Piecewise');
model.component('comp1').material('mat1').propertyGroup('def').func.create('Cp', 'Piecewise');
model.component('comp1').material('mat1').propertyGroup('def').func.create('rho', 'Analytic');
model.component('comp1').material('mat1').propertyGroup('def').func.create('k', 'Piecewise');
model.component('comp1').material('mat1').propertyGroup('def').func.create('cs', 'Analytic');
model.component('comp1').material('mat1').propertyGroup('def').func.create('an1', 'Analytic');
model.component('comp1').material('mat1').propertyGroup('def').func.create('an2', 'Analytic');
model.component('comp1').material('mat1').propertyGroup.create('RefractiveIndex', 'Refractive index');
model.component('comp1').material('mat1').propertyGroup.create('NonlinearModel', 'Nonlinear model');
model.component('comp1').material('mat2').selection.set([7 8 11 12]);
model.component('comp1').material('mat2').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.component('comp1').material('mat2').propertyGroup.create('RefractiveIndex', 'Refractive index');
model.component('comp1').material('mat3').propertyGroup('def').func.create('eta', 'Piecewise');
model.component('comp1').material('mat3').propertyGroup('def').func.create('Cp', 'Piecewise');
model.component('comp1').material('mat3').propertyGroup('def').func.create('rho', 'Piecewise');
model.component('comp1').material('mat3').propertyGroup('def').func.create('k', 'Piecewise');
model.component('comp1').material('mat3').propertyGroup('def').func.create('cs', 'Interpolation');
model.component('comp1').material('mat3').propertyGroup('def').func.create('an1', 'Analytic');
model.component('comp1').material('mat3').propertyGroup('def').func.create('an2', 'Analytic');
model.component('comp1').material('mat3').propertyGroup('def').func.create('an3', 'Analytic');
model.component('comp1').material('mat4').propertyGroup('def').func.create('eta', 'Piecewise');
model.component('comp1').material('mat4').propertyGroup('def').func.create('Cp', 'Piecewise');
model.component('comp1').material('mat4').propertyGroup('def').func.create('rho', 'Analytic');
model.component('comp1').material('mat4').propertyGroup('def').func.create('k', 'Piecewise');
model.component('comp1').material('mat4').propertyGroup.create('idealGas', 'Ideal gas');
model.component('comp1').material('mat4').propertyGroup('idealGas').func.create('Cp', 'Piecewise');

model.component('comp1').coordSystem.create('ie1', 'InfiniteElement');
model.component('comp1').coordSystem('ie1').selection.set([1 2 3 4 6 13 14 15]);

model.component('comp1').physics.create('ht', 'HeatTransferInSolidsAndFluids', 'geom1');
model.component('comp1').physics('ht').create('init2', 'init', 2);
model.component('comp1').physics('ht').feature('init2').selection.set([1 2 3 4 5 6 7 8 11 12 13 14 15]);
model.component('comp1').physics('ht').create('temp1', 'TemperatureBoundary', 1);
model.component('comp1').physics('ht').feature('temp1').selection.set([23 26]);
model.component('comp1').physics('ht').create('hf1', 'HeatFluxBoundary', 1);
model.component('comp1').physics('ht').feature('hf1').selection.set([1 2 3 5 7 9 10 11 13 14 15 16 17 19 20 21 22 24 25 27 28 29 30 31 32 34 35 36 37 38 42 43 44 45]);
model.component('comp1').physics('ht').create('hs1', 'HeatSource', 2);
model.component('comp1').physics('ht').feature('hs1').selection.set([9 10]);
model.component('comp1').physics('ht').feature('fluid1').selection.set([1 2 3 4 6 13 14 15]);
model.component('comp1').physics('ht').create('ma1', 'MoistAirHeatTransferModel', 2);
model.component('comp1').physics('ht').feature('ma1').selection.set([5 9 10]);
model.component('comp1').physics.create('spf', 'LaminarFlow', 'geom1');
model.component('comp1').physics('spf').selection.set([1 2 4 5 9 10]);
model.component('comp1').physics('spf').create('inl1', 'InletBoundary', 1);
model.component('comp1').physics('spf').feature('inl1').selection.set([23 26]);
model.component('comp1').physics('spf').create('out2', 'OutletBoundary', 1);
model.component('comp1').physics('spf').feature('out2').selection.set([1 2 3 9 10 11 13 35 36 38]);
model.component('comp1').physics.create('fpt', 'DropletSprays', 'geom1');
model.component('comp1').physics('fpt').selection.set([9 10]);
model.component('comp1').physics('fpt').create('evap1', 'DropletEvaporation', 2);
model.component('comp1').physics('fpt').feature('evap1').selection.set([9 10]);
model.component('comp1').physics('fpt').create('rpt1', 'ReleaseFromPoint', 0);
model.component('comp1').physics('fpt').feature('rpt1').selection.set([16]);
model.component('comp1').physics('fpt').create('wall2', 'Wall', 1);
model.component('comp1').physics('fpt').feature('wall2').selection.set([25]);
model.component('comp1').physics('fpt').feature('wall2').create('bacc1', 'BoundaryAccumulator', 1);
model.component('comp1').physics('fpt').create('wall3', 'Wall', 1);
model.component('comp1').physics('fpt').feature('wall3').selection.set([19 20 22 28 30 32]);
model.component('comp1').physics('fpt').feature('wall3').create('md1', 'MassDeposition', 1);
model.component('comp1').physics('fpt').create('lf1', 'LiftForce', 2);
model.component('comp1').physics('fpt').feature('lf1').selection.set([9 10]);
model.component('comp1').physics('fpt').create('gf1', 'GravityForce', 2);
model.component('comp1').physics('fpt').feature('gf1').selection.set([9 10]);
model.component('comp1').physics('fpt').create('chl1', 'ConvectiveHeatLosses', 2);
model.component('comp1').physics('fpt').feature('chl1').selection.set([9 10]);
model.component('comp1').physics('fpt').create('dph1', 'DissipatedParticleHeat', 2);
model.component('comp1').physics('fpt').feature('dph1').selection.set([9 10]);
model.component('comp1').physics('fpt').create('rhl1', 'RadiativeHeatLosses', 2);
model.component('comp1').physics('fpt').feature('rhl1').selection.set([9 10]);
model.component('comp1').physics('fpt').create('dacc1', 'DomainAccumulator', 2);
model.component('comp1').physics('fpt').feature('dacc1').selection.set([9]);
model.component('comp1').physics('fpt').create('dacc2', 'DomainAccumulator', 2);
model.component('comp1').physics('fpt').feature('dacc2').selection.set([10]);
model.component('comp1').physics.create('mt', 'MoistureTransportInAir', 'geom1');
model.component('comp1').physics('mt').selection.set([5 9 10]);
model.component('comp1').physics('mt').create('open1', 'OpenBoundary', 1);
model.component('comp1').physics('mt').feature('open1').selection.set([1 2 3 4 5 6 7 8 9 10 11 12 13 14 16 18 21 23 24 25 26 27 31 33 35 36 37 38 39 40 41 42 43 44 45]);
model.component('comp1').physics('mt').create('ifl1', 'Inflow', 1);
model.component('comp1').physics('mt').feature('ifl1').selection.set([23 26]);
model.component('comp1').physics('mt').create('ms1', 'MoistureSource', 2);
model.component('comp1').physics('mt').feature('ms1').selection.set([9]);
model.component('comp1').physics('mt').create('ms2', 'MoistureSource', 2);
model.component('comp1').physics('mt').feature('ms2').selection.set([10]);
model.component('comp1').physics('mt').create('init2', 'InitialValues', 2);
model.component('comp1').physics('mt').feature('init2').selection.set([1 2 3 4 6 7 8 9 10 11 12 13 14 15]);

model.component('comp1').multiphysics.create('nitf1', 'NonIsothermalFlow', 2);
model.component('comp1').multiphysics.create('ham1', 'HeatAndMoisture', 2);
model.component('comp1').multiphysics('ham1').selection.set([5 9 10]);
model.component('comp1').multiphysics.create('mf1', 'MoistureFlow', 2);

model.component('comp1').probe.create('pdom1', 'DomainPoint');
model.component('comp1').probe.create('pdom2', 'DomainPoint');
model.component('comp1').probe.create('pdom3', 'DomainPoint');
model.component('comp1').probe('pdom1').create('ppb4', 'PointExpr');
model.component('comp1').probe('pdom2').create('ppb5', 'PointExpr');
model.component('comp1').probe('pdom3').create('ppb6', 'PointExpr');

model.result.table('tbl1').label('Probe Table 1');
model.result.table('evl2').label('Evaluation 2D');
model.result.table('evl2').comments('Interactive 2D values');
model.result.table('for1').label('Table 1');
model.result.table('tbl2').label('Table 2');
model.result.table('tbl2').comments('Line Average 1');

model.component('comp1').view('view1').axis.set('xmin', -0.2743403911590576);
model.component('comp1').view('view1').axis.set('xmax', 2.4743404388427734);
model.component('comp1').view('view1').axis.set('ymin', -0.09999996423721313);
model.component('comp1').view('view1').axis.set('ymax', 2.0999999046325684);

model.component('comp1').material('mat1').label('Air');
model.component('comp1').material('mat1').set('family', 'air');
model.component('comp1').material('mat1').propertyGroup('def').func('eta').set('arg', 'T');
model.component('comp1').material('mat1').propertyGroup('def').func('eta').set('pieces', {'200.0' '1600.0' '-8.38278E-7+8.35717342E-8*T^1-7.69429583E-11*T^2+4.6437266E-14*T^3-1.06585607E-17*T^4'});
model.component('comp1').material('mat1').propertyGroup('def').func('eta').set('argunit', 'K');
model.component('comp1').material('mat1').propertyGroup('def').func('eta').set('fununit', 'Pa*s');
model.component('comp1').material('mat1').propertyGroup('def').func('Cp').set('arg', 'T');
model.component('comp1').material('mat1').propertyGroup('def').func('Cp').set('pieces', {'200.0' '1600.0' '1047.63657-0.372589265*T^1+9.45304214E-4*T^2-6.02409443E-7*T^3+1.2858961E-10*T^4'});
model.component('comp1').material('mat1').propertyGroup('def').func('Cp').set('argunit', 'K');
model.component('comp1').material('mat1').propertyGroup('def').func('Cp').set('fununit', 'J/(kg*K)');
model.component('comp1').material('mat1').propertyGroup('def').func('rho').set('expr', 'pA*0.02897/R_const[K*mol/J]/T');
model.component('comp1').material('mat1').propertyGroup('def').func('rho').set('args', {'pA' 'T'});
model.component('comp1').material('mat1').propertyGroup('def').func('rho').set('dermethod', 'manual');
model.component('comp1').material('mat1').propertyGroup('def').func('rho').set('argders', {'pA' 'd(pA*0.02897/R_const/T,pA)'; 'T' 'd(pA*0.02897/R_const/T,T)'});
model.component('comp1').material('mat1').propertyGroup('def').func('rho').set('fununit', 'kg/m^3');
model.component('comp1').material('mat1').propertyGroup('def').func('rho').set('argunit', {'Pa' 'K'});
model.component('comp1').material('mat1').propertyGroup('def').func('rho').set('plotargs', {'pA' '0' '1'; 'T' '0' '1'});
model.component('comp1').material('mat1').propertyGroup('def').func('k').set('arg', 'T');
model.component('comp1').material('mat1').propertyGroup('def').func('k').set('pieces', {'200.0' '1600.0' '-0.00227583562+1.15480022E-4*T^1-7.90252856E-8*T^2+4.11702505E-11*T^3-7.43864331E-15*T^4'});
model.component('comp1').material('mat1').propertyGroup('def').func('k').set('argunit', 'K');
model.component('comp1').material('mat1').propertyGroup('def').func('k').set('fununit', 'W/(m*K)');
model.component('comp1').material('mat1').propertyGroup('def').func('cs').set('expr', 'sqrt(1.4*R_const[K*mol/J]/0.02897*T)');
model.component('comp1').material('mat1').propertyGroup('def').func('cs').set('args', {'T'});
model.component('comp1').material('mat1').propertyGroup('def').func('cs').set('dermethod', 'manual');
model.component('comp1').material('mat1').propertyGroup('def').func('cs').set('fununit', 'm/s');
model.component('comp1').material('mat1').propertyGroup('def').func('cs').set('argunit', {'K'});
model.component('comp1').material('mat1').propertyGroup('def').func('cs').set('plotargs', {'T' '273.15' '373.15'});
model.component('comp1').material('mat1').propertyGroup('def').func('an1').set('funcname', 'alpha_p');
model.component('comp1').material('mat1').propertyGroup('def').func('an1').set('expr', '-1/rho(pA,T)*d(rho(pA,T),T)');
model.component('comp1').material('mat1').propertyGroup('def').func('an1').set('args', {'pA' 'T'});
model.component('comp1').material('mat1').propertyGroup('def').func('an1').set('fununit', '1/K');
model.component('comp1').material('mat1').propertyGroup('def').func('an1').set('argunit', {'Pa' 'K'});
model.component('comp1').material('mat1').propertyGroup('def').func('an1').set('plotargs', {'pA' '101325' '101325'; 'T' '273.15' '373.15'});
model.component('comp1').material('mat1').propertyGroup('def').func('an2').set('funcname', 'muB');
model.component('comp1').material('mat1').propertyGroup('def').func('an2').set('expr', '0.6*eta(T)');
model.component('comp1').material('mat1').propertyGroup('def').func('an2').set('args', {'T'});
model.component('comp1').material('mat1').propertyGroup('def').func('an2').set('fununit', 'Pa*s');
model.component('comp1').material('mat1').propertyGroup('def').func('an2').set('argunit', {'K'});
model.component('comp1').material('mat1').propertyGroup('def').func('an2').set('plotargs', {'T' '200' '1600'});
model.component('comp1').material('mat1').propertyGroup('def').set('thermalexpansioncoefficient', '');
model.component('comp1').material('mat1').propertyGroup('def').set('molarmass', '');
model.component('comp1').material('mat1').propertyGroup('def').set('bulkviscosity', '');
model.component('comp1').material('mat1').propertyGroup('def').set('thermalexpansioncoefficient', {'alpha_p(pA,T)' '0' '0' '0' 'alpha_p(pA,T)' '0' '0' '0' 'alpha_p(pA,T)'});
model.component('comp1').material('mat1').propertyGroup('def').set('molarmass', '0.02897[kg/mol]');
model.component('comp1').material('mat1').propertyGroup('def').set('bulkviscosity', 'muB(T)');
model.component('comp1').material('mat1').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.component('comp1').material('mat1').propertyGroup('def').set('relpermittivity', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.component('comp1').material('mat1').propertyGroup('def').set('dynamicviscosity', 'eta(T)');
model.component('comp1').material('mat1').propertyGroup('def').set('ratioofspecificheat', '1.4');
model.component('comp1').material('mat1').propertyGroup('def').set('electricconductivity', {'0[S/m]' '0' '0' '0' '0[S/m]' '0' '0' '0' '0[S/m]'});
model.component('comp1').material('mat1').propertyGroup('def').set('heatcapacity', 'Cp(T)');
model.component('comp1').material('mat1').propertyGroup('def').set('density', 'rho(pA,T)');
model.component('comp1').material('mat1').propertyGroup('def').set('thermalconductivity', {'k(T)' '0' '0' '0' 'k(T)' '0' '0' '0' 'k(T)'});
model.component('comp1').material('mat1').propertyGroup('def').set('soundspeed', 'cs(T)');
model.component('comp1').material('mat1').propertyGroup('def').addInput('temperature');
model.component('comp1').material('mat1').propertyGroup('def').addInput('pressure');
model.component('comp1').material('mat1').propertyGroup('RefractiveIndex').set('n', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.component('comp1').material('mat1').propertyGroup('NonlinearModel').set('BA', '(def.gamma+1)/2');
model.component('comp1').material('mat2').label('Silica glass');
model.component('comp1').material('mat2').set('family', 'custom');
model.component('comp1').material('mat2').set('customambient', [1 1 1]);
model.component('comp1').material('mat2').set('noise', true);
model.component('comp1').material('mat2').set('fresnel', 0.99);
model.component('comp1').material('mat2').set('roughness', 0.02);
model.component('comp1').material('mat2').set('metallic', 0);
model.component('comp1').material('mat2').set('pearl', 0);
model.component('comp1').material('mat2').set('diffusewrap', 0);
model.component('comp1').material('mat2').set('clearcoat', 0);
model.component('comp1').material('mat2').set('reflectance', 0);
model.component('comp1').material('mat2').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.component('comp1').material('mat2').propertyGroup('def').set('electricconductivity', {'1e-14[S/m]' '0' '0' '0' '1e-14[S/m]' '0' '0' '0' '1e-14[S/m]'});
model.component('comp1').material('mat2').propertyGroup('def').set('thermalexpansioncoefficient', {'0.55e-6[1/K]' '0' '0' '0' '0.55e-6[1/K]' '0' '0' '0' '0.55e-6[1/K]'});
model.component('comp1').material('mat2').propertyGroup('def').set('heatcapacity', '703[J/(kg*K)]');
model.component('comp1').material('mat2').propertyGroup('def').set('relpermittivity', {'3.75' '0' '0' '0' '3.75' '0' '0' '0' '3.75'});
model.component('comp1').material('mat2').propertyGroup('def').set('density', '2203[kg/m^3]');
model.component('comp1').material('mat2').propertyGroup('def').set('thermalconductivity', {'1.38[W/(m*K)]' '0' '0' '0' '1.38[W/(m*K)]' '0' '0' '0' '1.38[W/(m*K)]'});
model.component('comp1').material('mat2').propertyGroup('Enu').set('E', '73.1e9[Pa]');
model.component('comp1').material('mat2').propertyGroup('Enu').set('nu', '0.17');
model.component('comp1').material('mat2').propertyGroup('RefractiveIndex').set('n', {'1.45' '0' '0' '0' '1.45' '0' '0' '0' '1.45'});
model.component('comp1').material('mat3').label('Water, liquid');
model.component('comp1').material('mat3').set('family', 'water');
model.component('comp1').material('mat3').propertyGroup('def').func('eta').set('arg', 'T');
model.component('comp1').material('mat3').propertyGroup('def').func('eta').set('pieces', {'273.15' '413.15' '1.3799566804-0.021224019151*T^1+1.3604562827E-4*T^2-4.6454090319E-7*T^3+8.9042735735E-10*T^4-9.0790692686E-13*T^5+3.8457331488E-16*T^6'; '413.15' '553.75' '0.00401235783-2.10746715E-5*T^1+3.85772275E-8*T^2-2.39730284E-11*T^3'});
model.component('comp1').material('mat3').propertyGroup('def').func('eta').set('argunit', 'K');
model.component('comp1').material('mat3').propertyGroup('def').func('eta').set('fununit', 'Pa*s');
model.component('comp1').material('mat3').propertyGroup('def').func('Cp').set('arg', 'T');
model.component('comp1').material('mat3').propertyGroup('def').func('Cp').set('pieces', {'273.15' '553.75' '12010.1471-80.4072879*T^1+0.309866854*T^2-5.38186884E-4*T^3+3.62536437E-7*T^4'});
model.component('comp1').material('mat3').propertyGroup('def').func('Cp').set('argunit', 'K');
model.component('comp1').material('mat3').propertyGroup('def').func('Cp').set('fununit', 'J/(kg*K)');
model.component('comp1').material('mat3').propertyGroup('def').func('rho').set('arg', 'T');
model.component('comp1').material('mat3').propertyGroup('def').func('rho').set('smooth', 'contd1');
model.component('comp1').material('mat3').propertyGroup('def').func('rho').set('pieces', {'273.15' '293.15' '0.000063092789034*T^3-0.060367639882855*T^2+18.9229382407066*T-950.704055329848'; '293.15' '373.15' '0.000010335053319*T^3-0.013395065634452*T^2+4.969288832655160*T+432.257114008512'});
model.component('comp1').material('mat3').propertyGroup('def').func('rho').set('argunit', 'K');
model.component('comp1').material('mat3').propertyGroup('def').func('rho').set('fununit', 'kg/m^3');
model.component('comp1').material('mat3').propertyGroup('def').func('k').set('arg', 'T');
model.component('comp1').material('mat3').propertyGroup('def').func('k').set('pieces', {'273.15' '553.75' '-0.869083936+0.00894880345*T^1-1.58366345E-5*T^2+7.97543259E-9*T^3'});
model.component('comp1').material('mat3').propertyGroup('def').func('k').set('argunit', 'K');
model.component('comp1').material('mat3').propertyGroup('def').func('k').set('fununit', 'W/(m*K)');
model.component('comp1').material('mat3').propertyGroup('def').func('cs').set('table', {'273' '1403';  ...
'278' '1427';  ...
'283' '1447';  ...
'293' '1481';  ...
'303' '1507';  ...
'313' '1526';  ...
'323' '1541';  ...
'333' '1552';  ...
'343' '1555';  ...
'353' '1555';  ...
'363' '1550';  ...
'373' '1543'});
model.component('comp1').material('mat3').propertyGroup('def').func('cs').set('interp', 'piecewisecubic');
model.component('comp1').material('mat3').propertyGroup('def').func('cs').set('fununit', {'m/s'});
model.component('comp1').material('mat3').propertyGroup('def').func('cs').set('argunit', {'K'});
model.component('comp1').material('mat3').propertyGroup('def').func('an1').set('funcname', 'alpha_p');
model.component('comp1').material('mat3').propertyGroup('def').func('an1').set('expr', '-1/rho(T)*d(rho(T),T)');
model.component('comp1').material('mat3').propertyGroup('def').func('an1').set('args', {'T'});
model.component('comp1').material('mat3').propertyGroup('def').func('an1').set('fununit', '1/K');
model.component('comp1').material('mat3').propertyGroup('def').func('an1').set('argunit', {'K'});
model.component('comp1').material('mat3').propertyGroup('def').func('an1').set('plotargs', {'T' '273.15' '373.15'});
model.component('comp1').material('mat3').propertyGroup('def').func('an2').set('funcname', 'gamma_w');
model.component('comp1').material('mat3').propertyGroup('def').func('an2').set('expr', '1+(T/Cp(T))*(alpha_p(T)*cs(T))^2');
model.component('comp1').material('mat3').propertyGroup('def').func('an2').set('args', {'T'});
model.component('comp1').material('mat3').propertyGroup('def').func('an2').set('fununit', '1');
model.component('comp1').material('mat3').propertyGroup('def').func('an2').set('argunit', {'K'});
model.component('comp1').material('mat3').propertyGroup('def').func('an2').set('plotargs', {'T' '273.15' '373.15'});
model.component('comp1').material('mat3').propertyGroup('def').func('an3').set('funcname', 'muB');
model.component('comp1').material('mat3').propertyGroup('def').func('an3').set('expr', '2.79*eta(T)');
model.component('comp1').material('mat3').propertyGroup('def').func('an3').set('args', {'T'});
model.component('comp1').material('mat3').propertyGroup('def').func('an3').set('fununit', 'Pa*s');
model.component('comp1').material('mat3').propertyGroup('def').func('an3').set('argunit', {'K'});
model.component('comp1').material('mat3').propertyGroup('def').func('an3').set('plotargs', {'T' '273.15' '553.75'});
model.component('comp1').material('mat3').propertyGroup('def').set('thermalexpansioncoefficient', '');
model.component('comp1').material('mat3').propertyGroup('def').set('bulkviscosity', '');
model.component('comp1').material('mat3').propertyGroup('def').set('thermalexpansioncoefficient', {'alpha_p(T)' '0' '0' '0' 'alpha_p(T)' '0' '0' '0' 'alpha_p(T)'});
model.component('comp1').material('mat3').propertyGroup('def').set('bulkviscosity', 'muB(T)');
model.component('comp1').material('mat3').propertyGroup('def').set('dynamicviscosity', 'eta(T)');
model.component('comp1').material('mat3').propertyGroup('def').set('ratioofspecificheat', 'gamma_w(T)');
model.component('comp1').material('mat3').propertyGroup('def').set('electricconductivity', {'5.5e-6[S/m]' '0' '0' '0' '5.5e-6[S/m]' '0' '0' '0' '5.5e-6[S/m]'});
model.component('comp1').material('mat3').propertyGroup('def').set('heatcapacity', 'Cp(T)');
model.component('comp1').material('mat3').propertyGroup('def').set('density', 'rho(T)');
model.component('comp1').material('mat3').propertyGroup('def').set('thermalconductivity', {'k(T)' '0' '0' '0' 'k(T)' '0' '0' '0' 'k(T)'});
model.component('comp1').material('mat3').propertyGroup('def').set('soundspeed', 'cs(T)');
model.component('comp1').material('mat3').propertyGroup('def').addInput('temperature');
model.component('comp1').material('mat4').label('Steam');
model.component('comp1').material('mat4').set('family', 'air');
model.component('comp1').material('mat4').propertyGroup('def').func('eta').set('arg', 'T');
model.component('comp1').material('mat4').propertyGroup('def').func('eta').set('pieces', {'380.0' '850.0' '-1.42022867E-6+3.8345571E-8*T^1-3.85222958E-12*T^2+2.1019569E-15*T^3'});
model.component('comp1').material('mat4').propertyGroup('def').func('eta').set('argunit', 'K');
model.component('comp1').material('mat4').propertyGroup('def').func('eta').set('fununit', 'Pa*s');
model.component('comp1').material('mat4').propertyGroup('def').func('Cp').set('arg', 'T');
model.component('comp1').material('mat4').propertyGroup('def').func('Cp').set('pieces', {'380.0' '850.0' '13604.7344-90.4303506*T^1+0.27735566*T^2-4.21264496E-4*T^3+3.18369497E-7*T^4-9.56147519E-11*T^5'});
model.component('comp1').material('mat4').propertyGroup('def').func('Cp').set('argunit', 'K');
model.component('comp1').material('mat4').propertyGroup('def').func('Cp').set('fununit', 'J/(kg*K)');
model.component('comp1').material('mat4').propertyGroup('def').func('rho').set('expr', 'pA*0.01802/R_const[K*mol/J]/T');
model.component('comp1').material('mat4').propertyGroup('def').func('rho').set('args', {'pA' 'T'});
model.component('comp1').material('mat4').propertyGroup('def').func('rho').set('dermethod', 'manual');
model.component('comp1').material('mat4').propertyGroup('def').func('rho').set('argders', {'pA' 'd(pA*0.01802/R_const/T,pA)'; 'T' 'd(pA*0.01802/R_const/T,T)'});
model.component('comp1').material('mat4').propertyGroup('def').func('rho').set('fununit', 'kg/m^3');
model.component('comp1').material('mat4').propertyGroup('def').func('rho').set('argunit', {'Pa' 'K'});
model.component('comp1').material('mat4').propertyGroup('def').func('rho').set('plotargs', {'pA' '101325' '101325'; 'T' '273.15' '293.15'});
model.component('comp1').material('mat4').propertyGroup('def').func('k').set('arg', 'T');
model.component('comp1').material('mat4').propertyGroup('def').func('k').set('pieces', {'380.0' '850.0' '1.31729321E-4+5.14971428E-5*T^1+3.89645315E-8*T^2-1.36813161E-11*T^3'});
model.component('comp1').material('mat4').propertyGroup('def').func('k').set('argunit', 'K');
model.component('comp1').material('mat4').propertyGroup('def').func('k').set('fununit', 'W/(m*K)');
model.component('comp1').material('mat4').propertyGroup('def').set('dynamicviscosity', 'eta(T)');
model.component('comp1').material('mat4').propertyGroup('def').set('ratioofspecificheat', '1.3');
model.component('comp1').material('mat4').propertyGroup('def').set('heatcapacity', 'Cp(T)');
model.component('comp1').material('mat4').propertyGroup('def').set('density', 'rho(pA,T)');
model.component('comp1').material('mat4').propertyGroup('def').set('thermalconductivity', {'k(T)' '0' '0' '0' 'k(T)' '0' '0' '0' 'k(T)'});
model.component('comp1').material('mat4').propertyGroup('def').addInput('temperature');
model.component('comp1').material('mat4').propertyGroup('def').addInput('pressure');
model.component('comp1').material('mat4').propertyGroup('idealGas').func('Cp').label('Piecewise 2');
model.component('comp1').material('mat4').propertyGroup('idealGas').func('Cp').set('arg', 'T');
model.component('comp1').material('mat4').propertyGroup('idealGas').func('Cp').set('pieces', {'380.0' '850.0' '13604.7344-90.4303506*T^1+0.27735566*T^2-4.21264496E-4*T^3+3.18369497E-7*T^4-9.56147519E-11*T^5'});
model.component('comp1').material('mat4').propertyGroup('idealGas').func('Cp').set('argunit', 'K');
model.component('comp1').material('mat4').propertyGroup('idealGas').func('Cp').set('fununit', 'J/(kg*K)');
model.component('comp1').material('mat4').propertyGroup('idealGas').set('Rs', 'R_const/Mn');
model.component('comp1').material('mat4').propertyGroup('idealGas').set('heatcapacity', 'Cp(T)');
model.component('comp1').material('mat4').propertyGroup('idealGas').set('ratioofspecificheat', '1.3');
model.component('comp1').material('mat4').propertyGroup('idealGas').set('molarmass', '0.01802');
model.component('comp1').material('mat4').propertyGroup('idealGas').addInput('temperature');
model.component('comp1').material('mat4').propertyGroup('idealGas').addInput('pressure');
model.component('comp1').material('mat4').materialType('nonSolid');

model.component('comp1').coordSystem('ie1').label('Ambient Infinite Element Domain');
model.component('comp1').coordSystem('ie1').set('width', '1e5*dGeomChar');

model.component('comp1').physics('ht').prop('PhysicalModelProperty').set('dz', 'd_glass');
model.component('comp1').physics('ht').prop('PhysicalModelProperty').set('Tref', 'T_amb');
model.component('comp1').physics('ht').prop('AmbientSettings').set('ashrae2017LocationInfo', ['Location:\n  JOHN F KENNEDY INTL\n  United States\n  North America']);
model.component('comp1').physics('ht').prop('AmbientSettings').set('ashrae2017CoordinatesInfo', ['Coordinates: 40.639' native2unicode(hex2dec({'00' 'b0'}), 'unicode') 'N 73.762' native2unicode(hex2dec({'00' 'b0'}), 'unicode') 'E 3.0m']);
model.component('comp1').physics('ht').prop('AmbientSettings').set('LocationInfo', ['Location:\n  NEW YORK/JOHN F. KE\n  United States\n  North America']);
model.component('comp1').physics('ht').prop('AmbientSettings').set('CoordinatesInfo', ['Coordinates: 40.66' native2unicode(hex2dec({'00' 'b0'}), 'unicode') 'N 73.8' native2unicode(hex2dec({'00' 'b0'}), 'unicode') 'E 7.0m']);
model.component('comp1').physics('ht').prop('RadiationSettings').set('opaque', 'dfltopaque');
model.component('comp1').physics('ht').feature('solid1').set('minput_pressure_src', 'root.comp1.spf.pA');
model.component('comp1').physics('ht').feature('solid1').feature('opac1').set('spectralBandNameMulti', {'[0, 2.5[um]['; ['[2.5[um], +' native2unicode(hex2dec({'22' '1e'}), 'unicode') '[']});
model.component('comp1').physics('ht').feature('init1').set('Tinit', 'T_amb');
model.component('comp1').physics('ht').feature('idi1').feature('lopac1').set('spectralBandNameMulti', {'[0, 2.5[um]['; ['[2.5[um], +' native2unicode(hex2dec({'22' '1e'}), 'unicode') '[']});
model.component('comp1').physics('ht').feature('os1').featureInfo('warning').set('$message', {'This_feature_is_obsolete_and_will_be_removed_in_future_versions._Consider_transferring_features_related_to_radiation_in_participating_media_into_a_new_instance_of_the_Radiation_in_Participating_Media_physics_interface,_coupled_with_the_Heat_Transfer_interface_via_the_Heat_Transfer_with_Radiation_in_Participating_Media_multiphysics_coupling_feature.'});
model.component('comp1').physics('ht').feature('dcont1').set('pairDisconnect', true);
model.component('comp1').physics('ht').feature('dcont1').label('Continuity');
model.component('comp1').physics('ht').feature('init2').set('Tinit', 'T_amb');
model.component('comp1').physics('ht').feature('temp1').set('T0', 'T_inlet_steps(t[1/s])*T_inlet');
model.component('comp1').physics('ht').feature('hf1').set('HeatFluxType', 'ConvectiveHeatFlux');
model.component('comp1').physics('ht').feature('hf1').set('ExternalFluidType', 'MoistAir');
model.component('comp1').physics('ht').feature('hf1').set('h', 20);
model.component('comp1').physics('ht').feature('hf1').set('Text', 'T_amb');
model.component('comp1').physics('ht').feature('hs1').set('Q0_src', 'root.comp1.fpt.dph1.Qvol');
model.component('comp1').physics('ht').feature('hs1').set('materialType', 'from_mat');
model.component('comp1').physics('ht').feature('ma1').set('u_src', 'root.comp1.u');
model.component('comp1').physics('spf').prop('PhysicalModelProperty').set('rref', [0.1; 0.1; 0]);
model.component('comp1').physics('spf').prop('PhysicalModelProperty').set('Tref', 'T_amb');
model.component('comp1').physics('spf').prop('TurbulenceModelProperty').set('WallTreatment', 'WallFunctions');
model.component('comp1').physics('spf').prop('TurbulenceModelProperty').set('Cs', 0.01);
model.component('comp1').physics('spf').feature('fp1').set('m_pow', 1);
model.component('comp1').physics('spf').feature('fp1').set('mu_inf', 0);
model.component('comp1').physics('spf').feature('fp1').set('n_car', 0);
model.component('comp1').physics('spf').feature('fp1').set('lam_car', 0);
model.component('comp1').physics('spf').feature('fp1').set('m_p', 0);
model.component('comp1').physics('spf').feature('fp1').set('tau_y', 0);
model.component('comp1').physics('spf').feature('fp1').set('mu_p', 0);
model.component('comp1').physics('spf').feature('fp1').set('mu_mat', 'root.comp1.ht.mu_moist');
model.component('comp1').physics('spf').feature('fp1').set('m_pow_mat', 'from_mat');
model.component('comp1').physics('spf').feature('fp1').set('mu_inf_mat', 'from_mat');
model.component('comp1').physics('spf').feature('fp1').set('lam_car_mat', 'from_mat');
model.component('comp1').physics('spf').feature('fp1').set('n_car_mat', 'from_mat');
model.component('comp1').physics('spf').feature('fp1').set('mu_p_mat', 'from_mat');
model.component('comp1').physics('spf').feature('fp1').set('tau_y_mat', 'from_mat');
model.component('comp1').physics('spf').feature('init1').set('p_init', 'P_amb');
model.component('comp1').physics('spf').feature('dcont1').set('pairDisconnect', true);
model.component('comp1').physics('spf').feature('dcont1').label('Continuity');
model.component('comp1').physics('spf').feature('inl1').set('BoundaryCondition', 'MassFlow');
model.component('comp1').physics('spf').feature('inl1').set('U0in', 'v_inlet');
model.component('comp1').physics('spf').feature('inl1').set('FullyDevelopedFlowOption', 'V0');
model.component('comp1').physics('spf').feature('inl1').set('mfr', 'm_dot_inlet');
model.component('comp1').physics('spf').feature('inl1').set('Dbnd', 'w_rect');
model.component('comp1').physics('spf').feature('inl1').set('constraintType', 'symmetricConstraint');
model.component('comp1').physics('spf').feature('inl1').set('IT_list', 'user_defined');
model.component('comp1').physics('spf').feature('inl1').set('LT_list', 'user_defined');
model.component('comp1').physics('spf').feature('inl1').set('multipleInlets', false);
model.component('comp1').physics('spf').feature('out2').set('p0', 'P_amb');
model.component('comp1').physics('spf').feature('out2').set('constraintType', 'symmetricConstraint');
model.component('comp1').physics('spf').feature('out2').set('multipleInlets', false);
model.component('comp1').physics('fpt').prop('StoreParticleReleaseStatistics').set('StoreParticleReleaseStatistics', 1);
model.component('comp1').physics('fpt').prop('ComputeParticleTemperature').set('ComputeParticleTemperature', 1);
model.component('comp1').physics('fpt').prop('EnableMacroparticles').set('EnableMacroparticles', 1);
model.component('comp1').physics('fpt').feature('df1').set('u_src', 'root.comp1.mf1.ux');
model.component('comp1').physics('fpt').feature('df1').set('u', [0; 10; 0]);
model.component('comp1').physics('fpt').feature('df1').set('mu_mat', 'root.comp1.spf.mu');
model.component('comp1').physics('fpt').feature('df1').set('rho_mat', 'root.comp1.spf.rho');
model.component('comp1').physics('fpt').feature('df1').set('AffectedParticleProperties', 'pp1');
model.component('comp1').physics('fpt').feature('dr1').feature('kh1').set('rho_mat', 'root.comp1.spf.rho');
model.component('comp1').physics('fpt').feature('dr1').feature('kh1').set('u_src', 'root.comp1.mf1.ux');
model.component('comp1').physics('fpt').feature('dr1').feature('kh1').active(false);
model.component('comp1').physics('fpt').feature('wall1').label('Outer Walls');
model.component('comp1').physics('fpt').feature('pp1').set('AccretionOrEvaporationRateSpecification', 'evap1');
model.component('comp1').physics('fpt').feature('pp1').set('ParticleMaterialProperties', 'mat3');
model.component('comp1').physics('fpt').feature('evap1').set('Cp', 'nojac(subst(material.Cp,fpt.evap1.minput_temperature,fpt.evap1.Tr))');
model.component('comp1').physics('fpt').feature('evap1').set('IncludeDropletHeating', true);
model.component('comp1').physics('fpt').feature('evap1').set('SaturationVaporPressure', 'ClausiusClapeyronEquation');
model.component('comp1').physics('fpt').feature('evap1').set('pva', '12335[Pa]');
model.component('comp1').physics('fpt').feature('evap1').set('VaporDiffusionCoefficient', 'FromThermalProperties');
model.component('comp1').physics('fpt').feature('evap1').set('mpc', '1[ng]');
model.component('comp1').physics('fpt').feature('evap1').set('DropletVaporProperties', 'mat3');
model.component('comp1').physics('fpt').feature('evap1').set('minput_temperature_src', 'root.comp1.ham1.T');
model.component('comp1').physics('fpt').feature('evap1').set('minput_temperature', 'nojac(nitf1.T)');
model.component('comp1').physics('fpt').feature('evap1').set('minput_pressure', 'nojac(mf1.pA)');
model.component('comp1').physics('fpt').feature('rpt1').set('mdot', 'm_dot_spray');
model.component('comp1').physics('fpt').feature('rpt1').set('rt', 'range(0,0.7,4.9)');
model.component('comp1').physics('fpt').feature('rpt1').set('Nvalt', 'N_spray_number');
model.component('comp1').physics('fpt').feature('rpt1').set('tstart', 't_spray_start');
model.component('comp1').physics('fpt').feature('rpt1').set('tlast', 't_spray_end');
model.component('comp1').physics('fpt').feature('rpt1').set('InitialVelocity', 'ConstantSpeedCone');
model.component('comp1').physics('fpt').feature('rpt1').set('Us', 'initial_particle_speed');
model.component('comp1').physics('fpt').feature('rpt1').set('Nvel', 10);
model.component('comp1').physics('fpt').feature('rpt1').set('cax', [0; 0.1; 0]);
model.component('comp1').physics('fpt').feature('rpt1').set('alphac', 'pi/12');
model.component('comp1').physics('fpt').feature('rpt1').set('Tp0', 'T_amb');
model.component('comp1').physics('fpt').feature('rpt1').set('MpDistributionFunction', 'Normal');
model.component('comp1').physics('fpt').feature('rpt1').set('mp0', '0.1[g]');
model.component('comp1').physics('fpt').feature('rpt1').set('mpNval', 'N_particles_per_spray');
model.component('comp1').physics('fpt').feature('rpt1').set('mpmean', 'm_dot_spray/N_particles_per_spray[1/s]');
model.component('comp1').physics('fpt').feature('rpt1').set('mpstd', '0.1*m_dot_spray/N_particles_per_spray[1/s]');
model.component('comp1').physics('fpt').feature('rpt1').label('Nozzle Release Point');
model.component('comp1').physics('fpt').feature('wall2').set('WallCondition', 'Disappear');
model.component('comp1').physics('fpt').feature('wall2').label('Particle Outlet');
model.component('comp1').physics('fpt').feature('wall3').set('WallCondition', 'Bounce');
model.component('comp1').physics('fpt').feature('wall3').label('Mass deposition');
model.component('comp1').physics('fpt').feature('lf1').set('mu_mat', 'root.comp1.spf.mu');
model.component('comp1').physics('fpt').feature('lf1').set('u_src', 'root.comp1.mf1.ux');
model.component('comp1').physics('fpt').feature('lf1').set('minput_temperature_src', 'root.comp1.ham1.T');
model.component('comp1').physics('fpt').feature('lf1').set('minput_pressure_src', 'root.comp1.mf1.pA');
model.component('comp1').physics('fpt').feature('gf1').set('rho_mat', 'root.comp1.spf.rho');
model.component('comp1').physics('fpt').feature('chl1').set('HeatSourceDefinition', 'SpecifyHeatTransferCoefficient');
model.component('comp1').physics('fpt').feature('chl1').set('h', '75[W/(m^2*K)]');
model.component('comp1').physics('fpt').feature('chl1').set('minput_temperature_src', 'root.comp1.ham1.T');
model.component('comp1').physics('fpt').feature('chl1').set('minput_temperature', 'ht.T');
model.component('comp1').physics('fpt').feature('chl1').set('minput_pressure_src', 'root.comp1.mf1.pA');
model.component('comp1').physics('fpt').feature('rhl1').set('minput_temperature_src', 'root.comp1.ham1.T');
model.component('comp1').physics('fpt').feature('dacc1').set('AccumulatedVariableName', 'particle_moisture_domain9');
model.component('comp1').physics('fpt').feature('dacc1').set('R', 'fpt.evap1.Rp');
model.component('comp1').physics('fpt').feature('dacc1').set('DependentVariableQuantity', 'none');
model.component('comp1').physics('fpt').feature('dacc1').set('CustomDependentVariableUnit', 'kg/(m^2*s)');
model.component('comp1').physics('fpt').feature('dacc2').set('AccumulatedVariableName', 'particle_moisture_domain10');
model.component('comp1').physics('fpt').feature('dacc2').set('R', 'fpt.evap1.Rp');
model.component('comp1').physics('fpt').feature('dacc2').set('DependentVariableQuantity', 'none');
model.component('comp1').physics('fpt').feature('dacc2').set('CustomDependentVariableUnit', 'kg/(m^2*s)');
model.component('comp1').physics('mt').feature('ma1').set('minput_pressure_src', 'root.comp1.spf.pA');
model.component('comp1').physics('mt').feature('ma1').set('minput_velocity_src', 'root.comp1.u');
model.component('comp1').physics('mt').feature('open1').set('Tustr', 'ham1.T');
model.component('comp1').physics('mt').feature('ifl1').set('Specify', 'vaporMassFraction');
model.component('comp1').physics('mt').feature('ifl1').set('omegaustr', 0.1);
model.component('comp1').physics('mt').feature('ifl1').set('phiustr', 0.2);
model.component('comp1').physics('mt').feature('ifl1').set('Tustr', 'T_inlet_steps(t[1/s])*T_inlet');
model.component('comp1').physics('mt').feature('ms1').set('G0', 'fpt.dacc1.particle_moisture_domain9*1[1/m^3]');
model.component('comp1').physics('mt').feature('ms2').set('G0', 'fpt.dacc2.particle_moisture_domain10*1[1/m^3]');

model.component('comp1').multiphysics('nitf1').set('BoussinesqApproximation', true);
model.component('comp1').multiphysics('mf1').set('Fluid_showDependencies', true);
model.component('comp1').multiphysics('mf1').set('Transport_showDependencies', true);

model.component('comp1').probe('pdom1').label('OutletTemperatureProbe');
model.component('comp1').probe('pdom1').set('coords2', [1.1 0.6]);
model.component('comp1').probe('pdom1').feature('ppb1').set('table', 'tbl1');
model.component('comp1').probe('pdom1').feature('ppb1').set('window', 'window2');
model.component('comp1').probe('pdom1').feature('ppb4').set('expr', 'mt.phi');
model.component('comp1').probe('pdom1').feature('ppb4').set('unit', '1');
model.component('comp1').probe('pdom1').feature('ppb4').set('descr', 'Relative humidity');
model.component('comp1').probe('pdom1').feature('ppb4').set('table', 'tbl1');
model.component('comp1').probe('pdom1').feature('ppb4').set('window', 'window3');
model.component('comp1').probe('pdom2').label('WallTemperatureProbe1');
model.component('comp1').probe('pdom2').set('coords2', [0.9 1.4]);
model.component('comp1').probe('pdom2').feature('ppb2').set('table', 'tbl1');
model.component('comp1').probe('pdom2').feature('ppb2').set('window', 'window2');
model.component('comp1').probe('pdom2').feature('ppb5').set('expr', 'mt.phi');
model.component('comp1').probe('pdom2').feature('ppb5').set('unit', '1');
model.component('comp1').probe('pdom2').feature('ppb5').set('descr', 'Relative humidity');
model.component('comp1').probe('pdom2').feature('ppb5').set('table', 'tbl1');
model.component('comp1').probe('pdom2').feature('ppb5').set('window', 'window3');
model.component('comp1').probe('pdom3').label('WallTemperatureProbe2');
model.component('comp1').probe('pdom3').set('coords2', [1.3 1.7]);
model.component('comp1').probe('pdom3').feature('ppb3').set('table', 'tbl1');
model.component('comp1').probe('pdom3').feature('ppb3').set('window', 'window2');
model.component('comp1').probe('pdom3').feature('ppb6').set('expr', 'mt.phi');
model.component('comp1').probe('pdom3').feature('ppb6').set('unit', '1');
model.component('comp1').probe('pdom3').feature('ppb6').set('descr', 'Relative humidity');
model.component('comp1').probe('pdom3').feature('ppb6').set('table', 'tbl1');
model.component('comp1').probe('pdom3').feature('ppb6').set('window', 'window3');

model.study.create('std3');
model.study('std3').create('stat', 'Stationary');
model.study.create('std2');
model.study('std2').create('time', 'Transient');
model.study('std2').feature('time').set('activate', {'ht' 'on' 'spf' 'off' 'fpt' 'on' 'mt' 'on' 'frame:spatial1' 'on'  ...
'frame:material1' 'on'});

model.sol.create('sol2');
model.sol('sol2').study('std2');
model.sol('sol2').attach('std2');
model.sol('sol2').create('st1', 'StudyStep');
model.sol('sol2').create('v1', 'Variables');
model.sol('sol2').create('t1', 'Time');
model.sol('sol2').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol2').feature('t1').create('d1', 'Direct');
model.sol('sol2').feature('t1').create('i1', 'Iterative');
model.sol('sol2').feature('t1').create('i2', 'Iterative');
model.sol('sol2').feature('t1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol2').feature('t1').feature('i2').create('mg1', 'Multigrid');
model.sol('sol2').feature('t1').feature('i2').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol2').feature('t1').feature('i2').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol2').feature('t1').feature('i2').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol2').feature('t1').feature.remove('fcDef');
model.sol.create('sol3');
model.sol('sol3').study('std3');
model.sol('sol3').attach('std3');
model.sol('sol3').create('st1', 'StudyStep');
model.sol('sol3').create('v1', 'Variables');
model.sol('sol3').create('s1', 'Stationary');
model.sol('sol3').feature('s1').create('se1', 'Segregated');
model.sol('sol3').feature('s1').create('d1', 'Direct');
model.sol('sol3').feature('s1').create('d2', 'Direct');
model.sol('sol3').feature('s1').create('d3', 'Direct');
model.sol('sol3').feature('s1').create('i1', 'Iterative');
model.sol('sol3').feature('s1').create('i2', 'Iterative');
model.sol('sol3').feature('s1').create('d4', 'Direct');
model.sol('sol3').feature('s1').create('i3', 'Iterative');
model.sol('sol3').feature('s1').create('i4', 'Iterative');
model.sol('sol3').feature('s1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol3').feature('s1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol3').feature('s1').feature('se1').create('ss3', 'SegregatedStep');
model.sol('sol3').feature('s1').feature('se1').create('ll1', 'LowerLimit');
model.sol('sol3').feature('s1').feature('se1').feature.remove('ssDef');
model.sol('sol3').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('pr').create('sc1', 'SCGS');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('po').create('sc1', 'SCGS');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol3').feature('s1').feature('i2').create('mg1', 'Multigrid');
model.sol('sol3').feature('s1').feature('i2').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol3').feature('s1').feature('i2').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol3').feature('s1').feature('i2').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol3').feature('s1').feature('i3').create('mg1', 'Multigrid');
model.sol('sol3').feature('s1').feature('i3').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol3').feature('s1').feature('i3').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol3').feature('s1').feature('i3').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol3').feature('s1').feature('i4').create('mg1', 'Multigrid');
model.sol('sol3').feature('s1').feature('i4').feature('mg1').feature('pr').create('so1', 'SOR');
model.sol('sol3').feature('s1').feature('i4').feature('mg1').feature('po').create('so1', 'SOR');
model.sol('sol3').feature('s1').feature('i4').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol3').feature('s1').feature.remove('fcDef');

model.result.dataset.create('part1', 'Particle');
model.result.dataset.create('cln1', 'CutLine2D');
model.result.dataset.create('dset3', 'Solution');
model.result.dataset.create('dset4', 'Solution');
model.result.dataset.create('cpt1', 'CutPoint2D');
model.result.dataset.create('cpt2', 'CutPoint2D');
model.result.dataset.create('cpt3', 'CutPoint2D');
model.result.dataset.create('cln2', 'CutLine2D');
model.result.dataset.create('cln3', 'CutLine2D');
model.result.dataset.create('cln4', 'CutLine2D');
model.result.dataset.create('cln5', 'CutLine2D');
model.result.dataset.create('cln6', 'CutLine2D');
model.result.dataset.create('cln7', 'CutLine2D');
model.result.dataset.create('cln8', 'CutLine2D');
model.result.dataset.create('an1_ds1', 'Grid1D');
model.result.dataset.create('mesh1', 'Mesh');
model.result.dataset('dset2').set('solution', 'sol2');
model.result.dataset('cln1').set('data', 'dset2');
model.result.dataset('dset3').set('solution', 'sol3');
model.result.dataset('dset4').set('probetag', 'pdom3');
model.result.dataset('cpt1').set('probetag', 'pdom1');
model.result.dataset('cpt1').set('data', 'dset4');
model.result.dataset('cpt2').set('probetag', 'pdom2');
model.result.dataset('cpt2').set('data', 'dset4');
model.result.dataset('cpt3').set('probetag', 'pdom3');
model.result.dataset('cpt3').set('data', 'dset4');
model.result.dataset('cln2').set('data', 'dset2');
model.result.dataset('cln3').set('data', 'dset2');
model.result.dataset('cln4').set('data', 'dset2');
model.result.dataset('cln5').set('data', 'dset2');
model.result.dataset('cln6').set('data', 'dset2');
model.result.dataset('cln7').set('data', 'dset2');
model.result.dataset('cln8').set('data', 'dset2');
model.result.dataset('an1_ds1').set('data', 'none');
model.result.dataset.remove('dset1');
model.result.numerical.create('pev1', 'EvalPoint');
model.result.numerical.create('pev2', 'EvalPoint');
model.result.numerical.create('pev3', 'EvalPoint');
model.result.numerical.create('pev4', 'EvalPoint');
model.result.numerical.create('pev5', 'EvalPoint');
model.result.numerical.create('pev6', 'EvalPoint');
model.result.numerical.create('av1', 'AvLine');
model.result.numerical.create('av2', 'AvLine');
model.result.numerical.create('av3', 'AvLine');
model.result.numerical.create('av4', 'AvLine');
model.result.numerical.create('av5', 'AvLine');
model.result.numerical.create('av6', 'AvLine');
model.result.numerical.create('av7', 'AvLine');
model.result.numerical('pev1').set('probetag', 'pdom1/ppb1');
model.result.numerical('pev2').set('probetag', 'pdom2/ppb2');
model.result.numerical('pev3').set('probetag', 'pdom3/ppb3');
model.result.numerical('pev4').set('probetag', 'pdom1/ppb4');
model.result.numerical('pev5').set('probetag', 'pdom2/ppb5');
model.result.numerical('pev6').set('probetag', 'pdom3/ppb6');
model.result.numerical('av1').set('probetag', 'none');
model.result.numerical('av2').set('probetag', 'none');
model.result.numerical('av3').set('probetag', 'none');
model.result.numerical('av4').set('probetag', 'none');
model.result.numerical('av5').set('probetag', 'none');
model.result.numerical('av6').set('probetag', 'none');
model.result.numerical('av7').set('probetag', 'none');
model.result.create('pg15', 'PlotGroup2D');
model.result.create('pg16', 'PlotGroup2D');
model.result.create('pg21', 'PlotGroup2D');
model.result.create('pg6', 'PlotGroup2D');
model.result.create('pg22', 'PlotGroup2D');
model.result.create('pg7', 'PlotGroup2D');
model.result.create('pg17', 'PlotGroup2D');
model.result.create('pg20', 'PlotGroup2D');
model.result.create('pg25', 'PlotGroup1D');
model.result.create('pg8', 'PlotGroup1D');
model.result.create('pg9', 'PlotGroup1D');
model.result.create('pg10', 'PlotGroup1D');
model.result.create('pg11', 'PlotGroup1D');
model.result.create('pg12', 'PlotGroup1D');
model.result.create('pg14', 'PlotGroup1D');
model.result.create('pg18', 'PlotGroup1D');
model.result.create('pg19', 'PlotGroup1D');
model.result.create('pg23', 'PlotGroup1D');
model.result.create('pg24', 'PlotGroup1D');
model.result.create('pg26', 'PlotGroup1D');
model.result.create('pg27', 'PlotGroup1D');
model.result.create('pg28', 'PlotGroup1D');
model.result.create('pg29', 'PlotGroup1D');
model.result.create('pg30', 'PlotGroup1D');
model.result.create('pg31', 'PlotGroup2D');
model.result('pg15').set('data', 'dset3');
model.result('pg15').create('surf1', 'Surface');
model.result('pg15').create('str1', 'Streamline');
model.result('pg15').feature('surf1').set('expr', 'spf.U');
model.result('pg15').feature('str1').selection.all;
model.result('pg16').set('data', 'dset3');
model.result('pg16').create('surf1', 'Surface');
model.result('pg16').create('con1', 'Contour');
model.result('pg16').feature('surf1').set('expr', 'p-P_amb');
model.result('pg16').feature('con1').set('expr', 'p-P_amb');
model.result('pg21').set('data', 'dset3');
model.result('pg21').create('surf1', 'Surface');
model.result('pg6').set('data', 'dset3');
model.result('pg6').create('con1', 'Contour');
model.result('pg22').set('data', 'dset3');
model.result('pg22').create('surf1', 'Surface');
model.result('pg22').feature('surf1').set('expr', 'mt.phi');
model.result('pg7').set('data', 'part1');
model.result('pg7').create('traj1', 'ParticleTrajectories');
model.result('pg7').feature('traj1').create('col1', 'Color');
model.result('pg7').feature('traj1').feature('col1').set('expr', 'fpt.rp');
model.result('pg17').create('surf1', 'Surface');
model.result('pg17').create('str1', 'Streamline');
model.result('pg17').create('traj1', 'ParticleTrajectories');
model.result('pg17').feature('str1').selection.all;
model.result('pg17').feature('traj1').set('data', 'part1');
model.result('pg17').feature('traj1').create('col1', 'Color');
model.result('pg17').feature('traj1').feature('col1').set('expr', 'fpt.Tp');
model.result('pg20').create('surf1', 'Surface');
model.result('pg20').create('str1', 'Streamline');
model.result('pg20').create('traj1', 'ParticleTrajectories');
model.result('pg20').feature('surf1').set('expr', 'mt.phi');
model.result('pg20').feature('str1').selection.all;
model.result('pg20').feature('traj1').set('data', 'part1');
model.result('pg20').feature('traj1').create('col1', 'Color');
model.result('pg20').feature('traj1').feature('col1').set('expr', 'fpt.rp');
model.result('pg25').set('data', 'part1');
model.result('pg25').create('hist1', 'Histogram');
model.result('pg25').feature('hist1').set('expr', 'fpt.dp');
model.result('pg8').set('data', 'part1');
model.result('pg8').create('hist1', 'Histogram');
model.result('pg8').feature('hist1').set('expr', 'fpt.Tp');
model.result('pg9').create('ptgr1', 'PointGraph');
model.result('pg9').create('ptgr2', 'PointGraph');
model.result('pg9').feature('ptgr1').selection.set([16]);
model.result('pg9').feature('ptgr2').selection.set([16]);
model.result('pg9').feature('ptgr2').set('expr', 'mt.phi');
model.result('pg10').create('lngr1', 'LineGraph');
model.result('pg10').feature('lngr1').set('xdata', 'expr');
model.result('pg11').create('ptgr1', 'PointGraph');
model.result('pg11').feature('ptgr1').selection.set([12]);
model.result('pg12').create('ptgr1', 'PointGraph');
model.result('pg12').feature('ptgr1').selection.set([20]);
model.result('pg14').set('probetag', 'window2');
model.result('pg14').create('tblp1', 'Table');
model.result('pg14').feature('tblp1').set('probetag', 'pdom1/ppb1,pdom2/ppb2,pdom3/ppb3,pdom6/ppb7');
model.result('pg18').set('data', 'part1');
model.result('pg18').create('ptp1', 'Particle1D');
model.result('pg18').create('ptp2', 'Particle1D');
model.result('pg18').feature('ptp1').set('expr', 'fpt.Tp');
model.result('pg18').feature('ptp2').set('expr', 'fpt.mp');
model.result('pg19').set('data', 'part1');
model.result('pg19').create('ptp1', 'Particle1D');
model.result('pg19').create('ptp3', 'Particle1D');
model.result('pg19').feature('ptp1').set('expr', 'fpt.Tp');
model.result('pg19').feature('ptp3').set('expr', 'fpt.rp');
model.result('pg23').create('ptp1', 'Particle1D');
model.result('pg23').create('ptp2', 'Particle1D');
model.result('pg23').create('ptp3', 'Particle1D');
model.result('pg23').feature('ptp1').set('data', 'part1');
model.result('pg23').feature('ptp1').set('expr', 'fpt.particle_moisture_domain9');
model.result('pg23').feature('ptp2').set('data', 'part1');
model.result('pg23').feature('ptp2').set('expr', 'fpt.particle_moisture_domain10');
model.result('pg23').feature('ptp3').set('data', 'part1');
model.result('pg23').feature('ptp3').set('expr', 'fpt.dph1.Qvol');
model.result('pg24').set('probetag', 'window3');
model.result('pg24').create('tblp1', 'Table');
model.result('pg24').feature('tblp1').set('probetag', 'pdom1/ppb4,pdom2/ppb5,pdom3/ppb6');
model.result('pg26').create('ptp1', 'Particle1D');
model.result('pg26').feature('ptp1').set('data', 'part1');
model.result('pg26').feature('ptp1').set('expr', 'fpt.dph1.Qvol');
model.result('pg27').create('ptgr1', 'PointGraph');
model.result('pg27').create('ptgr2', 'PointGraph');
model.result('pg27').create('ptgr3', 'PointGraph');
model.result('pg28').create('ptgr1', 'PointGraph');
model.result('pg28').feature('ptgr1').set('expr', 'mt.phi');
model.result('pg29').create('tblp1', 'Table');
model.result('pg30').create('plot1', 'Function');
model.result('pg30').feature('plot1').set('expr', 'Tsteps(t)');
model.result('pg31').set('data', 'mesh1');
model.result('pg31').create('mesh1', 'Mesh');
model.result('pg31').feature('mesh1').set('meshdomain', 'all');
model.result.export.create('anim1', 'Animation');
model.result.export.create('anim4', 'Animation');
model.result.export.create('anim5', 'Animation');
model.result.export.create('anim2', 'Animation');
model.result.export.create('plot1', 'Plot');
model.result.export.create('plot11', 'Plot');
model.result.export.create('plot2', 'Plot');
model.result.export.create('plot12', 'Plot');
model.result.export.create('plot3', 'Plot');
model.result.export.create('plot4', 'Plot');
model.result.export.create('plot5', 'Plot');
model.result.export.create('data1', 'Data');
model.result.export.create('data3', 'Data');
model.result.export.create('data2', 'Data');
model.result.export.create('img1', 'Image');
model.result.export.create('img2', 'Image');
model.result.export.create('plot6', 'Plot');
model.result.export.create('plot7', 'Plot');
model.result.export.create('plot8', 'Plot');
model.result.export.create('plot9', 'Plot');
model.result.export.create('plot10', 'Plot');

model.component('comp1').probe('pdom1').genResult([]);
model.component('comp1').probe('pdom2').genResult([]);
model.component('comp1').probe('pdom3').genResult([]);

model.study('std3').label('Study 1');
model.study('std3').feature('stat').set('probefreq', 'psteps');
model.study('std2').feature('time').set('tlist', 'range(0,0.05,4.2)');
model.study('std2').feature('time').set('plot', true);
model.study('std2').feature('time').set('plotgroup', 'pg17');
model.study('std2').feature('time').set('plotfreq', 'tsteps');
model.study('std2').feature('time').set('useinitsol', true);
model.study('std2').feature('time').set('initmethod', 'sol');
model.study('std2').feature('time').set('initstudy', 'std3');
model.study('std2').feature('time').set('usesol', true);
model.study('std2').feature('time').set('notsolmethod', 'sol');
model.study('std2').feature('time').set('notstudy', 'std3');

model.sol('sol2').attach('std2');
model.sol('sol2').feature('st1').label('Compile Equations: Time Dependent');
model.sol('sol2').feature('v1').label('Dependent Variables 1.1');
model.sol('sol2').feature('v1').set('initmethod', 'sol');
model.sol('sol2').feature('v1').set('initsol', 'sol3');
model.sol('sol2').feature('v1').set('solnum', 'auto');
model.sol('sol2').feature('v1').set('notsolmethod', 'sol');
model.sol('sol2').feature('v1').set('notsol', 'sol3');
model.sol('sol2').feature('v1').set('notsolnum', 'auto');
model.sol('sol2').feature('v1').set('clist', {'range(0,0.05,4.2)' '0.004200000000000001[s]'});
model.sol('sol2').feature('v1').feature('comp1_mt_phi').set('scalemethod', 'manual');
model.sol('sol2').feature('t1').label('Time-Dependent Solver 1.1');
model.sol('sol2').feature('t1').set('tlist', 'range(0,0.05,4.2)');
model.sol('sol2').feature('t1').set('rtol', 1.0E-5);
model.sol('sol2').feature('t1').set('timemethod', 'genalpha');
model.sol('sol2').feature('t1').set('estrat', 'exclude');
model.sol('sol2').feature('t1').set('tstepsgenalpha', 'strict');
model.sol('sol2').feature('t1').set('initialstepgenalpha', '1e-9');
model.sol('sol2').feature('t1').set('initialstepgenalphaactive', true);
model.sol('sol2').feature('t1').set('plot', true);
model.sol('sol2').feature('t1').set('plotgroup', 'pg17');
model.sol('sol2').feature('t1').set('plotfreq', 'tsteps');
model.sol('sol2').feature('t1').feature('dDef').label('Direct 2');
model.sol('sol2').feature('t1').feature('aDef').label('Advanced 1');
model.sol('sol2').feature('t1').feature('aDef').set('cachepattern', true);
model.sol('sol2').feature('t1').feature('fc1').label('Fully Coupled 1.1');
model.sol('sol2').feature('t1').feature('fc1').set('linsolver', 'd1');
model.sol('sol2').feature('t1').feature('fc1').set('maxiter', 8);
model.sol('sol2').feature('t1').feature('fc1').set('ntolfact', 0.01);
model.sol('sol2').feature('t1').feature('fc1').set('damp', '0.7');
model.sol('sol2').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol2').feature('t1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol2').feature('t1').feature('fc1').set('aaccdim', 5);
model.sol('sol2').feature('t1').feature('fc1').set('aaccmix', 0.9);
model.sol('sol2').feature('t1').feature('d1').label('Direct (merged)');
model.sol('sol2').feature('t1').feature('i1').label('AMG, moisture transport variables (mt) (mf1)');
model.sol('sol2').feature('t1').feature('i1').feature('ilDef').label('Incomplete LU 1');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').label('Multigrid 1.1');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('pr').label('Presmoother 1');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('pr').feature('soDef').label('SOR 2');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('pr').feature('so1').label('SOR 1.1');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('po').label('Postsmoother 1');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('po').feature('soDef').label('SOR 2');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('po').feature('so1').label('SOR 1.1');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('cs').label('Coarse Solver 1');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('cs').feature('dDef').label('Direct 2');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').label('Direct 1.1');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('t1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol2').feature('t1').feature('i2').label('AMG, heat transfer variables (ht) (nitf1)');
model.sol('sol2').feature('t1').feature('i2').set('rhob', 20);
model.sol('sol2').feature('t1').feature('i2').feature('ilDef').label('Incomplete LU 1');
model.sol('sol2').feature('t1').feature('i2').feature('mg1').label('Multigrid 1.1');
model.sol('sol2').feature('t1').feature('i2').feature('mg1').set('prefun', 'saamg');
model.sol('sol2').feature('t1').feature('i2').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol2').feature('t1').feature('i2').feature('mg1').set('saamgcompwise', true);
model.sol('sol2').feature('t1').feature('i2').feature('mg1').set('usesmooth', false);
model.sol('sol2').feature('t1').feature('i2').feature('mg1').feature('pr').label('Presmoother 1');
model.sol('sol2').feature('t1').feature('i2').feature('mg1').feature('pr').feature('soDef').label('SOR 2');
model.sol('sol2').feature('t1').feature('i2').feature('mg1').feature('pr').feature('so1').label('SOR 1.1');
model.sol('sol2').feature('t1').feature('i2').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol2').feature('t1').feature('i2').feature('mg1').feature('po').label('Postsmoother 1');
model.sol('sol2').feature('t1').feature('i2').feature('mg1').feature('po').feature('soDef').label('SOR 2');
model.sol('sol2').feature('t1').feature('i2').feature('mg1').feature('po').feature('so1').label('SOR 1.1');
model.sol('sol2').feature('t1').feature('i2').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol2').feature('t1').feature('i2').feature('mg1').feature('cs').label('Coarse Solver 1');
model.sol('sol2').feature('t1').feature('i2').feature('mg1').feature('cs').feature('dDef').label('Direct 2');
model.sol('sol2').feature('t1').feature('i2').feature('mg1').feature('cs').feature('d1').label('Direct 1.1');
model.sol('sol2').feature('t1').feature('i2').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol2').feature('t1').feature('i2').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol2').runAll;
model.sol('sol3').attach('std3');
model.sol('sol3').feature('st1').label('Compile Equations: Stationary');
model.sol('sol3').feature('v1').label('Dependent Variables 1.1');
model.sol('sol3').feature('v1').feature('comp1_mt_phi').set('scalemethod', 'manual');
model.sol('sol3').feature('s1').label('Stationary Solver 1.1');
model.sol('sol3').feature('s1').feature('dDef').label('Direct 5');
model.sol('sol3').feature('s1').feature('aDef').label('Advanced 1');
model.sol('sol3').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol3').feature('s1').feature('se1').label('Segregated 1.1');
model.sol('sol3').feature('s1').feature('se1').set('maxsegiter', 200);
model.sol('sol3').feature('s1').feature('se1').set('ntolfact', 0.1);
model.sol('sol3').feature('s1').feature('se1').set('segstabacc', 'segcflcmp');
model.sol('sol3').feature('s1').feature('se1').feature('ss1').label('Velocity u, Pressure p');
model.sol('sol3').feature('s1').feature('se1').feature('ss1').set('segvar', {'comp1_p' 'comp1_u' 'comp1_spf_inl1_Pmf'});
model.sol('sol3').feature('s1').feature('se1').feature('ss1').set('linsolver', 'd1');
model.sol('sol3').feature('s1').feature('se1').feature('ss1').set('subdamp', '0.5');
model.sol('sol3').feature('s1').feature('se1').feature('ss2').label('Temperature');
model.sol('sol3').feature('s1').feature('se1').feature('ss2').set('segvar', {'comp1_T'});
model.sol('sol3').feature('s1').feature('se1').feature('ss2').set('linsolver', 'd2');
model.sol('sol3').feature('s1').feature('se1').feature('ss2').set('subdamp', '0.5');
model.sol('sol3').feature('s1').feature('se1').feature('ss3').label('Relative humidity');
model.sol('sol3').feature('s1').feature('se1').feature('ss3').set('segvar', {'comp1_mt_phi'});
model.sol('sol3').feature('s1').feature('se1').feature('ss3').set('linsolver', 'd3');
model.sol('sol3').feature('s1').feature('se1').feature('ss3').set('subdamp', '0.7');
model.sol('sol3').feature('s1').feature('se1').feature('ss3').set('subiter', 2);
model.sol('sol3').feature('s1').feature('se1').feature('ll1').label('Lower Limit 1.1');
model.sol('sol3').feature('s1').feature('se1').feature('ll1').set('lowerlimit', 'comp1.T 0 ');
model.sol('sol3').feature('s1').feature('d1').label('Direct, fluid flow variables (spf)');
model.sol('sol3').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol3').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol3').feature('s1').feature('d2').label('Direct, heat transfer variables (ht)');
model.sol('sol3').feature('s1').feature('d2').set('linsolver', 'pardiso');
model.sol('sol3').feature('s1').feature('d2').set('pivotperturb', 1.0E-13);
model.sol('sol3').feature('s1').feature('d3').label('Direct, moisture transport variables (mt)');
model.sol('sol3').feature('s1').feature('d3').set('linsolver', 'pardiso');
model.sol('sol3').feature('s1').feature('d3').set('pivotperturb', 1.0E-13);
model.sol('sol3').feature('s1').feature('i1').label('AMG, fluid flow variables (spf)');
model.sol('sol3').feature('s1').feature('i1').set('nlinnormuse', true);
model.sol('sol3').feature('s1').feature('i1').set('maxlinit', 1000);
model.sol('sol3').feature('s1').feature('i1').set('rhob', 20);
model.sol('sol3').feature('s1').feature('i1').feature('ilDef').label('Incomplete LU 1');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').label('Multigrid 1.1');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').set('maxcoarsedof', 80000);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').set('strconn', 0.02);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('pr').label('Presmoother 1');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('pr').feature('soDef').label('SOR 1');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').label('SCGS 1.1');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('iter', 0);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('vankavarsactive', true);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('vankavars', {'comp1_spf_inl1_Pmf'});
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('approxscgs', true);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('po').label('Postsmoother 1');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('po').feature('soDef').label('SOR 1');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').label('SCGS 1.1');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('iter', 1);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('vankavarsactive', true);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('vankavars', {'comp1_spf_inl1_Pmf'});
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('approxscgs', true);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('cs').label('Coarse Solver 1');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('cs').feature('dDef').label('Direct 2');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').label('Direct 1.1');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol3').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol3').feature('s1').feature('i2').label('AMG, heat transfer variables (ht)');
model.sol('sol3').feature('s1').feature('i2').set('nlinnormuse', true);
model.sol('sol3').feature('s1').feature('i2').set('rhob', 20);
model.sol('sol3').feature('s1').feature('i2').feature('ilDef').label('Incomplete LU 1');
model.sol('sol3').feature('s1').feature('i2').feature('mg1').label('Multigrid 1.1');
model.sol('sol3').feature('s1').feature('i2').feature('mg1').set('prefun', 'saamg');
model.sol('sol3').feature('s1').feature('i2').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol3').feature('s1').feature('i2').feature('mg1').set('saamgcompwise', true);
model.sol('sol3').feature('s1').feature('i2').feature('mg1').set('usesmooth', false);
model.sol('sol3').feature('s1').feature('i2').feature('mg1').feature('pr').label('Presmoother 1');
model.sol('sol3').feature('s1').feature('i2').feature('mg1').feature('pr').feature('soDef').label('SOR 2');
model.sol('sol3').feature('s1').feature('i2').feature('mg1').feature('pr').feature('so1').label('SOR 1.1');
model.sol('sol3').feature('s1').feature('i2').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol3').feature('s1').feature('i2').feature('mg1').feature('po').label('Postsmoother 1');
model.sol('sol3').feature('s1').feature('i2').feature('mg1').feature('po').feature('soDef').label('SOR 2');
model.sol('sol3').feature('s1').feature('i2').feature('mg1').feature('po').feature('so1').label('SOR 1.1');
model.sol('sol3').feature('s1').feature('i2').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol3').feature('s1').feature('i2').feature('mg1').feature('cs').label('Coarse Solver 1');
model.sol('sol3').feature('s1').feature('i2').feature('mg1').feature('cs').feature('dDef').label('Direct 2');
model.sol('sol3').feature('s1').feature('i2').feature('mg1').feature('cs').feature('d1').label('Direct 1.1');
model.sol('sol3').feature('s1').feature('i2').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol3').feature('s1').feature('i2').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol3').feature('s1').feature('d4').label('Direct (merged)');
model.sol('sol3').feature('s1').feature('i3').label('AMG, moisture transport variables (mt)');
model.sol('sol3').feature('s1').feature('i3').set('nlinnormuse', true);
model.sol('sol3').feature('s1').feature('i3').feature('ilDef').label('Incomplete LU 1');
model.sol('sol3').feature('s1').feature('i3').feature('mg1').label('Multigrid 1.1');
model.sol('sol3').feature('s1').feature('i3').feature('mg1').set('prefun', 'saamg');
model.sol('sol3').feature('s1').feature('i3').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol3').feature('s1').feature('i3').feature('mg1').set('usesmooth', false);
model.sol('sol3').feature('s1').feature('i3').feature('mg1').feature('pr').label('Presmoother 1');
model.sol('sol3').feature('s1').feature('i3').feature('mg1').feature('pr').feature('soDef').label('SOR 2');
model.sol('sol3').feature('s1').feature('i3').feature('mg1').feature('pr').feature('so1').label('SOR 1.1');
model.sol('sol3').feature('s1').feature('i3').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol3').feature('s1').feature('i3').feature('mg1').feature('po').label('Postsmoother 1');
model.sol('sol3').feature('s1').feature('i3').feature('mg1').feature('po').feature('soDef').label('SOR 2');
model.sol('sol3').feature('s1').feature('i3').feature('mg1').feature('po').feature('so1').label('SOR 1.1');
model.sol('sol3').feature('s1').feature('i3').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol3').feature('s1').feature('i3').feature('mg1').feature('cs').label('Coarse Solver 1');
model.sol('sol3').feature('s1').feature('i3').feature('mg1').feature('cs').feature('dDef').label('Direct 2');
model.sol('sol3').feature('s1').feature('i3').feature('mg1').feature('cs').feature('d1').label('Direct 1.1');
model.sol('sol3').feature('s1').feature('i3').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol3').feature('s1').feature('i3').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol3').feature('s1').feature('i4').label('AMG, heat and moisture variables (ham1)');
model.sol('sol3').feature('s1').feature('i4').set('nlinnormuse', true);
model.sol('sol3').feature('s1').feature('i4').set('rhob', 20);
model.sol('sol3').feature('s1').feature('i4').feature('ilDef').label('Incomplete LU 1');
model.sol('sol3').feature('s1').feature('i4').feature('mg1').label('Multigrid 1.1');
model.sol('sol3').feature('s1').feature('i4').feature('mg1').set('prefun', 'saamg');
model.sol('sol3').feature('s1').feature('i4').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol3').feature('s1').feature('i4').feature('mg1').set('saamgcompwise', true);
model.sol('sol3').feature('s1').feature('i4').feature('mg1').set('usesmooth', false);
model.sol('sol3').feature('s1').feature('i4').feature('mg1').feature('pr').label('Presmoother 1');
model.sol('sol3').feature('s1').feature('i4').feature('mg1').feature('pr').feature('soDef').label('SOR 2');
model.sol('sol3').feature('s1').feature('i4').feature('mg1').feature('pr').feature('so1').label('SOR 1.1');
model.sol('sol3').feature('s1').feature('i4').feature('mg1').feature('pr').feature('so1').set('relax', 0.9);
model.sol('sol3').feature('s1').feature('i4').feature('mg1').feature('po').label('Postsmoother 1');
model.sol('sol3').feature('s1').feature('i4').feature('mg1').feature('po').feature('soDef').label('SOR 2');
model.sol('sol3').feature('s1').feature('i4').feature('mg1').feature('po').feature('so1').label('SOR 1.1');
model.sol('sol3').feature('s1').feature('i4').feature('mg1').feature('po').feature('so1').set('relax', 0.9);
model.sol('sol3').feature('s1').feature('i4').feature('mg1').feature('cs').label('Coarse Solver 1');
model.sol('sol3').feature('s1').feature('i4').feature('mg1').feature('cs').feature('dDef').label('Direct 2');
model.sol('sol3').feature('s1').feature('i4').feature('mg1').feature('cs').feature('d1').label('Direct 1.1');
model.sol('sol3').feature('s1').feature('i4').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol3').feature('s1').feature('i4').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol3').runAll;

model.result.dataset('cln1').label('Outlet Sensor Array');
model.result.dataset('cln1').set('genpoints', [1 0.6; 1.2 0.6]);
model.result.dataset('dset4').label('Probe Solution 4');
model.result.dataset('cln2').label('Line 1');
model.result.dataset('cln2').set('genpoints', [1.3 1.8; 0.9 1.8]);
model.result.dataset('cln3').label('Line 2');
model.result.dataset('cln3').set('genpoints', [1.3 1.6; 0.9 1.6]);
model.result.dataset('cln3').set('spacevars', {'cln2x'});
model.result.dataset('cln3').set('normal', {'cln2nx' 'cln2ny'});
model.result.dataset('cln3').set('tangent', {'cln2tx' 'cln2ty'});
model.result.dataset('cln4').label('Line 3');
model.result.dataset('cln4').set('genpoints', [1.3 1.4; 0.9 1.4]);
model.result.dataset('cln4').set('spacevars', {'cln2x'});
model.result.dataset('cln4').set('normal', {'cln2nx' 'cln2ny'});
model.result.dataset('cln4').set('tangent', {'cln2tx' 'cln2ty'});
model.result.dataset('cln5').label('Line 4');
model.result.dataset('cln5').set('genpoints', [1.3 1.2; 0.9 1.2]);
model.result.dataset('cln5').set('spacevars', {'cln2x'});
model.result.dataset('cln5').set('normal', {'cln2nx' 'cln2ny'});
model.result.dataset('cln5').set('tangent', {'cln2tx' 'cln2ty'});
model.result.dataset('cln6').label('Line 5');
model.result.dataset('cln6').set('genpoints', {'1.3' '1.0'; '0.9' '1.0'});
model.result.dataset('cln6').set('spacevars', {'cln2x'});
model.result.dataset('cln6').set('normal', {'cln2nx' 'cln2ny'});
model.result.dataset('cln6').set('tangent', {'cln2tx' 'cln2ty'});
model.result.dataset('cln7').label('Line 6');
model.result.dataset('cln7').set('genpoints', [1.265 0.8; 0.935 0.8]);
model.result.dataset('cln7').set('spacevars', {'cln2x'});
model.result.dataset('cln7').set('normal', {'cln2nx' 'cln2ny'});
model.result.dataset('cln7').set('tangent', {'cln2tx' 'cln2ty'});
model.result.dataset('cln8').label('Line 7');
model.result.dataset('cln8').set('genpoints', [1.2 0.6; 1 0.6]);
model.result.dataset('cln8').set('spacevars', {'cln2x'});
model.result.dataset('cln8').set('normal', {'cln2nx' 'cln2ny'});
model.result.dataset('cln8').set('tangent', {'cln2tx' 'cln2ty'});
model.result.dataset('an1_ds1').set('function', 'all');
model.result.dataset('an1_ds1').set('par1', 't');
model.result.dataset('an1_ds1').set('parmax1', 60);
model.result.dataset('an1_ds1').set('res1', 10000);
model.result.dataset('an1_ds1').set('distribution', 'mixed');
model.result.numerical('pev1').set('descr', {'Temperature' 'Relative humidity'});
model.result.numerical('pev2').set('descr', {'Temperature' 'Relative humidity'});
model.result.numerical('pev3').set('descr', {'Temperature' 'Relative humidity'});
model.result.numerical('av1').set('data', 'cln2');
model.result.numerical('av2').set('data', 'cln3');
model.result.numerical('av2').set('table', 'tbl2');
model.result.numerical('av3').set('data', 'cln4');
model.result.numerical('av3').set('table', 'tbl2');
model.result.numerical('av4').set('data', 'cln5');
model.result.numerical('av4').set('table', 'tbl2');
model.result.numerical('av5').set('data', 'cln6');
model.result.numerical('av5').set('table', 'tbl2');
model.result.numerical('av6').set('data', 'cln7');
model.result.numerical('av6').set('table', 'tbl2');
model.result.numerical('av7').set('data', 'cln8');
model.result.numerical('av7').set('table', 'tbl2');
model.result.numerical('av2').setResult;
model.result.numerical('av3').appendResult;
model.result.numerical('av4').appendResult;
model.result.numerical('av5').appendResult;
model.result.numerical('av6').appendResult;
model.result.numerical('av7').appendResult;
model.result.evaluationGroup('eg1').set('data', 'dset2');
model.result.evaluationGroup('eg1').set('looplevelinput', {'manual'});
model.result.evaluationGroup('eg1').set('looplevel', [1]);
model.result.evaluationGroup('eg1').feature('sys1').set('solution', 'sol2');
model.result.evaluationGroup('eg1').feature('sys1').set('format', 'filled');
model.result('pg15').label('Stationary Fluid Velocity Field');
model.result('pg15').set('frametype', 'spatial');
model.result('pg15').set('showlegendsunit', true);
model.result('pg15').feature('surf1').label('Surface');
model.result('pg15').feature('surf1').set('descractive', true);
model.result('pg15').feature('surf1').set('colortable', 'JupiterAuroraBorealis');
model.result('pg15').feature('surf1').set('smooth', 'internal');
model.result('pg15').feature('surf1').set('resolution', 'normal');
model.result('pg15').feature('str1').set('expr', {'u' 'v'});
model.result('pg15').feature('str1').set('descr', 'Velocity field');
model.result('pg15').feature('str1').set('selnumber', 100);
model.result('pg15').feature('str1').set('pointtype', 'arrow');
model.result('pg15').feature('str1').set('arrowcount', 200);
model.result('pg15').feature('str1').set('arrowscale', 0.7852428903847365);
model.result('pg15').feature('str1').set('color', 'gray');
model.result('pg15').feature('str1').set('arrowcountactive', false);
model.result('pg15').feature('str1').set('arrowscaleactive', false);
model.result('pg15').feature('str1').set('resolution', 'normal');
model.result('pg16').label('Stationary Pressure Field');
model.result('pg16').set('frametype', 'spatial');
model.result('pg16').feature('surf1').set('resolution', 'normal');
model.result('pg16').feature('con1').label('Contour');
model.result('pg16').feature('con1').set('number', 7);
model.result('pg16').feature('con1').set('levelrounding', false);
model.result('pg16').feature('con1').set('contourlabels', true);
model.result('pg16').feature('con1').set('labelprec', 2);
model.result('pg16').feature('con1').set('labelcolor', 'white');
model.result('pg16').feature('con1').set('smooth', 'internal');
model.result('pg16').feature('con1').set('resolution', 'normal');
model.result('pg21').label('Stationary Temperature Field');
model.result('pg21').feature('surf1').label('Surface');
model.result('pg21').feature('surf1').set('colortable', 'HeatCameraLight');
model.result('pg21').feature('surf1').set('resolution', 'normal');
model.result('pg6').label('Isothermal Contours (ht) 1');
model.result('pg6').feature('con1').label('Contour');
model.result('pg6').feature('con1').set('number', 10);
model.result('pg6').feature('con1').set('levelrounding', false);
model.result('pg6').feature('con1').set('colortable', 'HeatCameraLight');
model.result('pg6').feature('con1').set('smooth', 'internal');
model.result('pg6').feature('con1').set('resolution', 'normal');
model.result('pg22').label('Relative Humidity (mt) 1');
model.result('pg22').feature('surf1').set('colortable', 'JupiterAuroraBorealis');
model.result('pg22').feature('surf1').set('colortabletrans', 'reverse');
model.result('pg22').feature('surf1').set('smooth', 'internal');
model.result('pg22').feature('surf1').set('resolution', 'normal');
model.result('pg7').label('Particle Trajectories (fpt)');
model.result('pg7').set('looplevel', [1]);
model.result('pg7').set('showlegendsunit', true);
model.result('pg7').feature('traj1').set('solrepresentation', 'solnum');
model.result('pg7').feature('traj1').set('linetype', 'none');
model.result('pg7').feature('traj1').set('pointtype', 'point');
model.result('pg7').feature('traj1').set('pointradiusexpr', '0.01');
model.result('pg7').feature('traj1').set('sphereradiusscale', 2);
model.result('pg7').feature('traj1').set('sphereradiusscaleactive', true);
model.result('pg7').feature('traj1').set('pointlineanim', true);
model.result('pg17').label('Disturbed Temperature field');
model.result('pg17').feature('surf1').set('colortable', 'HeatCameraLight');
model.result('pg17').feature('surf1').set('resolution', 'normal');
model.result('pg17').feature('str1').active(false);
model.result('pg17').feature('str1').set('expr', {'ht.tfluxx' 'ht.tfluxy'});
model.result('pg17').feature('str1').set('descr', 'Total heat flux');
model.result('pg17').feature('str1').set('selnumber', 40);
model.result('pg17').feature('str1').set('pointtype', 'arrow');
model.result('pg17').feature('str1').set('arrowcount', 73);
model.result('pg17').feature('str1').set('arrowscale', 1.2204142377635662E-5);
model.result('pg17').feature('str1').set('arrowcountactive', false);
model.result('pg17').feature('str1').set('arrowscaleactive', false);
model.result('pg17').feature('str1').set('resolution', 'normal');
model.result('pg17').feature('traj1').set('linetype', 'none');
model.result('pg17').feature('traj1').set('pointtype', 'point');
model.result('pg17').feature('traj1').set('pointradiusexpr', '0.01');
model.result('pg17').feature('traj1').set('sphereradiusscale', 2);
model.result('pg17').feature('traj1').set('sphereradiusscaleactive', true);
model.result('pg20').label('Disturbed Moisture Field');
model.result('pg20').set('looplevel', [1]);
model.result('pg20').feature('surf1').set('colortable', 'JupiterAuroraBorealis');
model.result('pg20').feature('surf1').set('colortabletrans', 'reverse');
model.result('pg20').feature('surf1').set('smooth', 'internal');
model.result('pg20').feature('surf1').set('resolution', 'normal');
model.result('pg20').feature('str1').set('expr', {'mt.tfluxx' 'mt.tfluxy'});
model.result('pg20').feature('str1').set('descr', 'Total moisture flux');
model.result('pg20').feature('str1').set('selnumber', 100);
model.result('pg20').feature('str1').set('pointtype', 'arrow');
model.result('pg20').feature('str1').set('arrowcount', 200);
model.result('pg20').feature('str1').set('arrowscale', 6.4169666382923);
model.result('pg20').feature('str1').set('arrowcountactive', false);
model.result('pg20').feature('str1').set('arrowscaleactive', false);
model.result('pg20').feature('str1').set('resolution', 'normal');
model.result('pg20').feature('traj1').set('solutionparams', 'parent');
model.result('pg20').feature('traj1').set('linetype', 'none');
model.result('pg20').feature('traj1').set('pointtype', 'point');
model.result('pg20').feature('traj1').set('pointradiusexpr', '0.01');
model.result('pg20').feature('traj1').set('sphereradiusscale', 2);
model.result('pg20').feature('traj1').set('sphereradiusscaleactive', true);
model.result('pg20').feature('traj1').set('pointlineanim', true);
model.result('pg25').label('Diamter Historgram');
model.result('pg25').set('xlabel', 'Particle diameter (m)');
model.result('pg25').set('ylabel', 'Relative count');
model.result('pg25').set('xlabelactive', false);
model.result('pg25').set('ylabelactive', false);
model.result('pg25').feature('hist1').set('number', 60);
model.result('pg25').feature('hist1').set('normalization', 'integralscaled');
model.result('pg25').feature('hist1').set('linewidth', 'preference');
model.result('pg25').feature('hist1').set('legend', true);
model.result('pg25').feature('hist1').set('resolution', 'normal');
model.result('pg8').label('Temperature Histogram');
model.result('pg8').set('xlabel', 'Particle temperature (K)');
model.result('pg8').set('ylabel', 'Relative count');
model.result('pg8').set('xlabelactive', false);
model.result('pg8').set('ylabelactive', false);
model.result('pg8').feature('hist1').set('number', 60);
model.result('pg8').feature('hist1').set('normalization', 'integralscaled');
model.result('pg8').feature('hist1').set('linewidth', 'preference');
model.result('pg8').feature('hist1').set('legend', true);
model.result('pg8').feature('hist1').set('resolution', 'normal');
model.result('pg9').label('Inlet Temperature over time');
model.result('pg9').set('xlabel', 'Time (s)');
model.result('pg9').set('ylabel', 'Temperature (K)');
model.result('pg9').set('yseclabel', 'Relative humidity (1)');
model.result('pg9').set('twoyaxes', true);
model.result('pg9').set('plotonsecyaxis', {'Inlet Temperature' 'off' 'ptgr1'; 'Inlet Humidity' 'on' 'ptgr2'});
model.result('pg9').set('xlabelactive', false);
model.result('pg9').set('ylabelactive', false);
model.result('pg9').set('yseclabelactive', false);
model.result('pg9').feature('ptgr1').label('Inlet Temperature');
model.result('pg9').feature('ptgr1').set('linewidth', 'preference');
model.result('pg9').feature('ptgr2').label('Inlet Humidity');
model.result('pg9').feature('ptgr2').set('linewidth', 'preference');
model.result('pg10').label('Outlet Temperature over Time');
model.result('pg10').set('data', 'cln1');
model.result('pg10').set('looplevelinput', {'manual'});
model.result('pg10').set('looplevel', [1]);
model.result('pg10').set('xlabel', 'x-coordinate (m)');
model.result('pg10').set('ylabel', 'Temperature (K)');
model.result('pg10').set('xlabelactive', false);
model.result('pg10').set('ylabelactive', false);
model.result('pg10').feature('lngr1').label('Outlet Temperatures');
model.result('pg10').feature('lngr1').set('xdataexpr', 'x');
model.result('pg10').feature('lngr1').set('xdataunit', 'm');
model.result('pg10').feature('lngr1').set('xdatadescr', 'x-coordinate');
model.result('pg10').feature('lngr1').set('linewidth', 'preference');
model.result('pg10').feature('lngr1').set('resolution', 'normal');
model.result('pg11').label('Glass Sensor 1 Temperature over time');
model.result('pg11').set('xlabel', 'Time (s)');
model.result('pg11').set('ylabel', 'Temperature (K)');
model.result('pg11').set('xlabelactive', false);
model.result('pg11').set('ylabelactive', false);
model.result('pg11').feature('ptgr1').label('Glass Sensor 1 Temperature');
model.result('pg11').feature('ptgr1').set('linewidth', 'preference');
model.result('pg12').label('Glass Sensor 2 Temperature over time');
model.result('pg12').set('xlabel', 'Time (s)');
model.result('pg12').set('ylabel', 'Temperature (K)');
model.result('pg12').set('xlabelactive', false);
model.result('pg12').set('ylabelactive', false);
model.result('pg12').feature('ptgr1').label('Glass Sensor 2 Temperature ');
model.result('pg12').feature('ptgr1').set('linewidth', 'preference');
model.result('pg14').label('Temperature probes');
model.result('pg14').set('xlabel', 'Time (s)');
model.result('pg14').set('windowtitle', 'Probe Plot 2');
model.result('pg14').set('xlabelactive', false);
model.result('pg14').feature('tblp1').label('Probe Table Graph 1');
model.result('pg14').feature('tblp1').set('linemarker', 'asterisk');
model.result('pg14').feature('tblp1').set('markerpos', 'datapoints');
model.result('pg14').feature('tblp1').set('legend', true);
model.result('pg18').label('Particle properties');
model.result('pg18').set('xlabel', 't (s)');
model.result('pg18').set('ylabel', 'Particle temperature (K)');
model.result('pg18').set('yseclabel', 'Particle mass (kg)');
model.result('pg18').set('twoyaxes', true);
model.result('pg18').set('plotonsecyaxis', {'Temperature' 'off' 'ptp1'; 'Mass' 'on' 'ptp2'});
model.result('pg18').set('xlabelactive', false);
model.result('pg18').set('ylabelactive', false);
model.result('pg18').set('yseclabelactive', false);
model.result('pg18').feature('ptp1').label('Temperature');
model.result('pg18').feature('ptp1').set('linewidth', 'preference');
model.result('pg18').feature('ptp1').set('legend', true);
model.result('pg18').feature('ptp1').set('dataseries', 'average');
model.result('pg18').feature('ptp2').label('Mass');
model.result('pg18').feature('ptp2').set('linewidth', 'preference');
model.result('pg18').feature('ptp2').set('legend', true);
model.result('pg18').feature('ptp2').set('dataseries', 'average');
model.result('pg19').label('Particle properties 1');
model.result('pg19').set('xlabel', 't (s)');
model.result('pg19').set('ylabel', 'Particle temperature (K)');
model.result('pg19').set('yseclabel', 'Particle radius (m)');
model.result('pg19').set('twoyaxes', true);
model.result('pg19').set('plotonsecyaxis', {'Temperature' 'off' 'ptp1'; 'Radius' 'on' 'ptp3'});
model.result('pg19').set('xlabelactive', false);
model.result('pg19').set('ylabelactive', false);
model.result('pg19').set('yseclabelactive', false);
model.result('pg19').feature('ptp1').label('Temperature');
model.result('pg19').feature('ptp1').set('linewidth', 'preference');
model.result('pg19').feature('ptp1').set('legend', true);
model.result('pg19').feature('ptp1').set('dataseries', 'average');
model.result('pg19').feature('ptp3').label('Radius');
model.result('pg19').feature('ptp3').set('linewidth', 'preference');
model.result('pg19').feature('ptp3').set('legend', true);
model.result('pg19').feature('ptp3').set('dataseries', 'average');
model.result('pg23').label('Particle Moisture');
model.result('pg23').set('xlabel', 't (s)');
model.result('pg23').set('ylabel', 'Accumulated variable particle_moisture_domain9 (kg/(m<sup>2</sup>*s))');
model.result('pg23').set('twoyaxes', true);
model.result('pg23').set('plotonsecyaxis', {'Particle 1' 'off' 'ptp1'; 'Particle 2' 'off' 'ptp2'; 'Particle 3' 'on' 'ptp3'});
model.result('pg23').set('xlabelactive', false);
model.result('pg23').set('ylabelactive', false);
model.result('pg23').feature('ptp1').set('linewidth', 'preference');
model.result('pg23').feature('ptp1').set('legend', true);
model.result('pg23').feature('ptp1').set('legendmethod', 'manual');
model.result('pg23').feature('ptp1').set('legends', {'Moisture source'});
model.result('pg23').feature('ptp2').set('linewidth', 'preference');
model.result('pg23').feature('ptp3').set('linewidth', 'preference');
model.result('pg23').feature('ptp3').set('legend', true);
model.result('pg24').label('Probe Plot Group 24');
model.result('pg24').set('xlabel', 'Time (s)');
model.result('pg24').set('windowtitle', 'Probe Plot 3');
model.result('pg24').set('xlabelactive', false);
model.result('pg24').feature('tblp1').label('Probe Table Graph 1');
model.result('pg24').feature('tblp1').set('legend', true);
model.result('pg26').label('Particle Heat');
model.result('pg26').set('xlabel', 't (s)');
model.result('pg26').set('ylabel', 'Total particle heat source, volumetric (W/m<sup>3</sup>)');
model.result('pg26').set('xlabelactive', false);
model.result('pg26').set('ylabelactive', false);
model.result('pg26').feature('ptp1').label('Sum of total particle heat');
model.result('pg26').feature('ptp1').set('linewidth', 'preference');
model.result('pg27').label('Temperature Probe Data');
model.result('pg27').set('xlabel', 'Time (s)');
model.result('pg27').set('ylabel', 'Temperature (K)');
model.result('pg27').set('xlabelactive', false);
model.result('pg27').set('ylabelactive', false);
model.result('pg27').feature('ptgr1').set('data', 'cpt1');
model.result('pg27').feature('ptgr1').set('looplevelinput', {'all'});
model.result('pg27').feature('ptgr1').set('linewidth', 'preference');
model.result('pg27').feature('ptgr2').set('data', 'cpt2');
model.result('pg27').feature('ptgr2').set('looplevelinput', {'all'});
model.result('pg27').feature('ptgr2').set('linewidth', 'preference');
model.result('pg27').feature('ptgr3').set('data', 'cpt3');
model.result('pg27').feature('ptgr3').set('looplevelinput', {'all'});
model.result('pg27').feature('ptgr3').set('linewidth', 'preference');
model.result('pg28').label('Humidity Probe Data');
model.result('pg28').set('xlabel', 'Time (s)');
model.result('pg28').set('ylabel', 'Relative humidity (1)');
model.result('pg28').set('xlabelactive', false);
model.result('pg28').set('ylabelactive', false);
model.result('pg28').feature('ptgr1').set('data', 'cpt1');
model.result('pg28').feature('ptgr1').set('looplevelinput', {'all'});
model.result('pg28').feature('ptgr1').set('linewidth', 'preference');
model.result('pg29').set('data', 'none');
model.result('pg29').set('xlabel', 'Time (s)');
model.result('pg29').set('xlabelactive', true);
model.result('pg29').set('ylabel', 'T (K)');
model.result('pg29').set('ylabelactive', true);
model.result('pg29').feature('tblp1').set('table', 'tbl2');
model.result('pg29').feature('tblp1').set('linewidth', 'preference');
model.result('pg30').set('data', 'an1_ds1');
model.result('pg30').set('solrepresentation', 'solnum');
model.result('pg30').set('titletype', 'manual');
model.result('pg30').set('title', 'Tsteps(t)');
model.result('pg30').set('ylabelactive', true);
model.result('pg30').feature('plot1').set('solrepresentation', 'solnum');
model.result('pg30').feature('plot1').set('descr', 'Tsteps(t)');
model.result('pg30').feature('plot1').set('xdataexpr', 't');
model.result('pg30').feature('plot1').set('xdataunit', 'm');
model.result('pg30').feature('plot1').set('xdatadescractive', true);
model.result('pg30').feature('plot1').set('xdatadescr', '');
model.result('pg30').feature('plot1').set('upperbound', 60);
model.result('pg30').feature('plot1').set('linewidth', 'preference');
model.result('pg31').label('Mesh Plot 31');
model.result('pg31').set('inherithide', true);
model.result('pg31').set('showlegendsmaxmin', true);
model.result('pg31').feature('mesh1').set('elemcolor', 'none');
model.result('pg31').feature('mesh1').set('resolution', 'normal');
model.result.export('anim1').label('Trajectory Animation');
model.result.export('anim1').set('plotgroup', 'pg7');
model.result.export('anim1').set('target', 'player');
model.result.export('anim1').set('solnumtype', 'level1');
model.result.export('anim1').set('framesel', 'all');
model.result.export('anim1').set('showframe', 28);
model.result.export('anim1').set('shownparameter', '1.35');
model.result.export('anim1').set('frametime', 0.5);
model.result.export('anim1').set('logo1d', true);
model.result.export('anim1').set('title2d', true);
model.result.export('anim1').set('axes2d', true);
model.result.export('anim1').set('logo3d', true);
model.result.export('anim1').set('fontsize', '12');
model.result.export('anim1').set('colortheme', 'globaltheme');
model.result.export('anim1').set('customcolor', [1 1 1]);
model.result.export('anim1').set('background', 'transparent');
model.result.export('anim1').set('gltfincludelines', 'on');
model.result.export('anim1').set('title1d', 'on');
model.result.export('anim1').set('legend1d', 'on');
model.result.export('anim1').set('logo1d', 'on');
model.result.export('anim1').set('options1d', 'on');
model.result.export('anim1').set('title2d', 'on');
model.result.export('anim1').set('legend2d', 'on');
model.result.export('anim1').set('logo2d', 'off');
model.result.export('anim1').set('options2d', 'on');
model.result.export('anim1').set('title3d', 'on');
model.result.export('anim1').set('legend3d', 'on');
model.result.export('anim1').set('logo3d', 'on');
model.result.export('anim1').set('options3d', 'on');
model.result.export('anim1').set('axisorientation', 'on');
model.result.export('anim1').set('grid', 'on');
model.result.export('anim1').set('axes1d', 'on');
model.result.export('anim1').set('axes2d', 'on');
model.result.export('anim1').set('showgrid', 'on');
model.result.export('anim4').label('Temperature Animation');
model.result.export('anim4').set('plotgroup', 'pg17');
model.result.export('anim4').set('target', 'player');
model.result.export('anim4').set('solnumtype', 'level1');
model.result.export('anim4').set('framesel', 'all');
model.result.export('anim4').set('showframe', 26);
model.result.export('anim4').set('shownparameter', '1.25');
model.result.export('anim4').set('repeat', 'forever');
model.result.export('anim4').set('logo1d', true);
model.result.export('anim4').set('title2d', true);
model.result.export('anim4').set('axes2d', true);
model.result.export('anim4').set('logo3d', true);
model.result.export('anim4').set('fontsize', '12');
model.result.export('anim4').set('colortheme', 'globaltheme');
model.result.export('anim4').set('customcolor', [1 1 1]);
model.result.export('anim4').set('background', 'transparent');
model.result.export('anim4').set('gltfincludelines', 'on');
model.result.export('anim4').set('title1d', 'on');
model.result.export('anim4').set('legend1d', 'on');
model.result.export('anim4').set('logo1d', 'on');
model.result.export('anim4').set('options1d', 'on');
model.result.export('anim4').set('title2d', 'on');
model.result.export('anim4').set('legend2d', 'on');
model.result.export('anim4').set('logo2d', 'off');
model.result.export('anim4').set('options2d', 'on');
model.result.export('anim4').set('title3d', 'on');
model.result.export('anim4').set('legend3d', 'on');
model.result.export('anim4').set('logo3d', 'on');
model.result.export('anim4').set('options3d', 'on');
model.result.export('anim4').set('axisorientation', 'on');
model.result.export('anim4').set('grid', 'on');
model.result.export('anim4').set('axes1d', 'on');
model.result.export('anim4').set('axes2d', 'on');
model.result.export('anim4').set('showgrid', 'on');
model.result.export('anim5').label('Outlet Histogram Animation');
model.result.export('anim5').set('plotgroup', 'pg8');
model.result.export('anim5').set('target', 'player');
model.result.export('anim5').set('giffilename', 'C:\Users\Arthur Lepsien\Documents\GitHub\Spraydrying\COMSOL\DryerTest\particle size distribution.gif');
model.result.export('anim5').set('fps', 1);
model.result.export('anim5').set('solnumtype', 'level1');
model.result.export('anim5').set('maxframes', 7);
model.result.export('anim5').set('showframe', 7);
model.result.export('anim5').set('shownparameter', '1');
model.result.export('anim5').set('logo1d', true);
model.result.export('anim5').set('logo3d', true);
model.result.export('anim5').set('fontsize', '12');
model.result.export('anim5').set('colortheme', 'globaltheme');
model.result.export('anim5').set('customcolor', [1 1 1]);
model.result.export('anim5').set('background', 'transparent');
model.result.export('anim5').set('gltfincludelines', 'on');
model.result.export('anim5').set('title1d', 'on');
model.result.export('anim5').set('legend1d', 'on');
model.result.export('anim5').set('logo1d', 'on');
model.result.export('anim5').set('options1d', 'on');
model.result.export('anim5').set('title2d', 'off');
model.result.export('anim5').set('legend2d', 'on');
model.result.export('anim5').set('logo2d', 'off');
model.result.export('anim5').set('options2d', 'on');
model.result.export('anim5').set('title3d', 'on');
model.result.export('anim5').set('legend3d', 'on');
model.result.export('anim5').set('logo3d', 'on');
model.result.export('anim5').set('options3d', 'on');
model.result.export('anim5').set('axisorientation', 'on');
model.result.export('anim5').set('grid', 'on');
model.result.export('anim5').set('axes1d', 'on');
model.result.export('anim5').set('axes2d', 'off');
model.result.export('anim5').set('showgrid', 'on');
model.result.export('anim2').set('plotgroup', 'pg8');
model.result.export('anim2').set('giffilename', 'C:\Users\Arthur Lepsien\Documents\GitHub\Spraydrying\COMSOL\DryerTest\particle size distribution.gif');
model.result.export('anim2').set('fps', 1);
model.result.export('anim2').set('solnumtype', 'level1');
model.result.export('anim2').set('maxframes', 6);
model.result.export('anim2').set('logo1d', true);
model.result.export('anim2').set('logo3d', true);
model.result.export('anim2').set('fontsize', '12');
model.result.export('anim2').set('colortheme', 'globaltheme');
model.result.export('anim2').set('customcolor', [1 1 1]);
model.result.export('anim2').set('background', 'transparent');
model.result.export('anim2').set('gltfincludelines', 'on');
model.result.export('anim2').set('title1d', 'on');
model.result.export('anim2').set('legend1d', 'on');
model.result.export('anim2').set('logo1d', 'on');
model.result.export('anim2').set('options1d', 'on');
model.result.export('anim2').set('title2d', 'off');
model.result.export('anim2').set('legend2d', 'on');
model.result.export('anim2').set('logo2d', 'off');
model.result.export('anim2').set('options2d', 'on');
model.result.export('anim2').set('title3d', 'on');
model.result.export('anim2').set('legend3d', 'on');
model.result.export('anim2').set('logo3d', 'on');
model.result.export('anim2').set('options3d', 'on');
model.result.export('anim2').set('axisorientation', 'on');
model.result.export('anim2').set('grid', 'on');
model.result.export('anim2').set('axes1d', 'on');
model.result.export('anim2').set('axes2d', 'off');
model.result.export('anim2').set('showgrid', 'on');
model.result.export('plot1').label('Particle Temperature Histogram Data');
model.result.export('plot1').set('plotgroup', 'pg8');
model.result.export('plot1').set('plot', 'hist1');
model.result.export('plot1').set('filename', ['C:\Users\Arthur Lepsien\Nextcloud\Spr' native2unicode(hex2dec({'00' 'fc'}), 'unicode') 'htrocknung\DMD\2D_Dryer\data\temperatureAndMoisture\validation\particle_temperature_histogram.csv']);
model.result.export('plot1').set('separator', ',');
model.result.export('plot11').label('Particle Diameter Histogram Data');
model.result.export('plot11').set('plotgroup', 'pg25');
model.result.export('plot11').set('plot', 'hist1');
model.result.export('plot11').set('filename', ['C:\Users\Arthur Lepsien\Nextcloud\Spr' native2unicode(hex2dec({'00' 'fc'}), 'unicode') 'htrocknung\DMD\2D_Dryer\data\temperatureAndMoisture\validation\particle_diameter_histogram.csv']);
model.result.export('plot11').set('separator', ',');
model.result.export('plot2').label('Inlet Temperature Data');
model.result.export('plot2').set('plotgroup', 'pg9');
model.result.export('plot2').set('plot', 'ptgr1');
model.result.export('plot2').set('filename', ['C:\Users\Arthur Lepsien\Nextcloud\Spr' native2unicode(hex2dec({'00' 'fc'}), 'unicode') 'htrocknung\DMD\2D_Dryer\data\temperatureAndMoisture\validation\inlet_temperatureData_withParticles.csv']);
model.result.export('plot2').set('separator', ',');
model.result.export('plot12').label('Inlet Humidity Data');
model.result.export('plot12').set('plotgroup', 'pg9');
model.result.export('plot12').set('plot', 'ptgr2');
model.result.export('plot12').set('filename', ['C:\Users\Arthur Lepsien\Nextcloud\Spr' native2unicode(hex2dec({'00' 'fc'}), 'unicode') 'htrocknung\DMD\2D_Dryer\data\temperatureAndMoisture\validation\inlet_humidityData_withParticles.csv']);
model.result.export('plot12').set('separator', ',');
model.result.export('plot3').label('Outlet Temperature Data');
model.result.export('plot3').set('plotgroup', 'pg10');
model.result.export('plot3').set('plot', 'lngr1');
model.result.export('plot3').set('filename', 'F:\Arthur\Forschung\DMD\2D_Dryer\data\outlet_temperature_particles_csv.csv');
model.result.export('plot3').set('multiplecurves', 'ascolumns');
model.result.export('plot3').set('separator', ',');
model.result.export('plot4').label('Glass Sensor 1 Temperature Data');
model.result.export('plot4').set('plotgroup', 'pg11');
model.result.export('plot4').set('plot', 'ptgr1');
model.result.export('plot4').set('filename', ['C:\Users\Arthur Lepsien\Nextcloud\Spr' native2unicode(hex2dec({'00' 'fc'}), 'unicode') 'htrocknung\DMD\2D_Dryer\data\temperatureAndMoisture\validation\glassSensor1_temperatureData_withParticles.csv']);
model.result.export('plot4').set('separator', ',');
model.result.export('plot5').label('Glass Sensor 2 Temperature Data');
model.result.export('plot5').set('plotgroup', 'pg12');
model.result.export('plot5').set('plot', 'ptgr1');
model.result.export('plot5').set('filename', ['C:\Users\Arthur Lepsien\Nextcloud\Spr' native2unicode(hex2dec({'00' 'fc'}), 'unicode') 'htrocknung\DMD\2D_Dryer\data\temperatureAndMoisture\validation\glassSensor2_temperatureData_withParticles.csv']);
model.result.export('plot5').set('separator', ',');
model.result.export('data1').label('Temperature Data');
model.result.export('data1').set('filename', ['C:\Users\Arthur Lepsien\Nextcloud\Spr' native2unicode(hex2dec({'00' 'fc'}), 'unicode') 'htrocknung\DMD\2D_Dryer\data\temperatureAndMoisture\validation\temperatureData_withParticles.csv']);
model.result.export('data1').set('separator', ',');
model.result.export('data3').label('Humidity Data');
model.result.export('data3').set('expr', {'mt.phi'});
model.result.export('data3').set('unit', {'1'});
model.result.export('data3').set('descr', {'Relative humidity'});
model.result.export('data3').set('filename', ['C:\Users\Arthur Lepsien\Nextcloud\Spr' native2unicode(hex2dec({'00' 'fc'}), 'unicode') 'htrocknung\DMD\2D_Dryer\data\temperatureAndMoisture\validation\humidityData_withParticles.csv']);
model.result.export('data3').set('separator', ',');
model.result.export('data2').label('Particle Temperature Data');
model.result.export('data2').set('data', 'part1');
model.result.export('data2').set('looplevelinput', {'manual'});
model.result.export('data2').set('looplevel', [1]);
model.result.export('data2').set('expr', {'fpt.Tp'});
model.result.export('data2').set('descr', {'Particle temperature'});
model.result.export('data2').set('filename', ['C:\Users\Arthur Lepsien\Nextcloud\Spr' native2unicode(hex2dec({'00' 'fc'}), 'unicode') 'htrocknung\DMD\2D_Dryer\data\temperatureAndMoisture\validation\particle_temperature_data_csv.csv']);
model.result.export('data2').set('separator', ',');
model.result.export('img1').label('VelocityFIeld');
model.result.export('img1').set('sourceobject', 'pg15');
model.result.export('img1').set('unit', 'mm');
model.result.export('img1').set('width', 200);
model.result.export('img1').set('height', 200);
model.result.export('img1').set('resolution', 300);
model.result.export('img1').set('sizedesc', '2362 x 2362 px');
model.result.export('img1').set('pngfilename', ['C:\Users\Arthur Lepsien\Nextcloud\Spr' native2unicode(hex2dec({'00' 'fc'}), 'unicode') 'htrocknung\Paper\ifacconf_dmd\figs\velocityField.png']);
model.result.export('img1').set('size', 'manualprint');
model.result.export('img1').set('unit', 'mm');
model.result.export('img1').set('height', '200');
model.result.export('img1').set('width', '200');
model.result.export('img1').set('lockratio', 'off');
model.result.export('img1').set('resolution', '300');
model.result.export('img1').set('antialias', 'on');
model.result.export('img1').set('zoomextents', 'on');
model.result.export('img1').set('fontsize', '15');
model.result.export('img1').set('colortheme', 'globaltheme');
model.result.export('img1').set('customcolor', [1 1 1]);
model.result.export('img1').set('background', 'transparent');
model.result.export('img1').set('gltfincludelines', 'on');
model.result.export('img1').set('title1d', 'on');
model.result.export('img1').set('legend1d', 'on');
model.result.export('img1').set('logo1d', 'off');
model.result.export('img1').set('options1d', 'on');
model.result.export('img1').set('title2d', 'off');
model.result.export('img1').set('legend2d', 'on');
model.result.export('img1').set('logo2d', 'off');
model.result.export('img1').set('options2d', 'on');
model.result.export('img1').set('title3d', 'on');
model.result.export('img1').set('legend3d', 'on');
model.result.export('img1').set('logo3d', 'on');
model.result.export('img1').set('options3d', 'off');
model.result.export('img1').set('axisorientation', 'on');
model.result.export('img1').set('grid', 'on');
model.result.export('img1').set('axes1d', 'on');
model.result.export('img1').set('axes2d', 'off');
model.result.export('img1').set('showgrid', 'on');
model.result.export('img1').set('target', 'file');
model.result.export('img1').set('qualitylevel', '92');
model.result.export('img1').set('qualityactive', 'off');
model.result.export('img1').set('imagetype', 'png');
model.result.export('img1').set('lockview', 'off');
model.result.export('img2').set('sourceobject', 'pg31');
model.result.export('img2').set('pngfilename', ['C:\Users\Arthur Lepsien\Nextcloud\Spr' native2unicode(hex2dec({'00' 'fc'}), 'unicode') 'htrocknung\Paper\ifacconf_dmd\figs\mesh.png']);
model.result.export('img2').set('size', 'manualprint');
model.result.export('img2').set('unit', 'px');
model.result.export('img2').set('height', '1440');
model.result.export('img2').set('width', '640*3');
model.result.export('img2').set('lockratio', 'off');
model.result.export('img2').set('resolution', '400');
model.result.export('img2').set('antialias', 'on');
model.result.export('img2').set('zoomextents', 'on');
model.result.export('img2').set('fontsize', '15');
model.result.export('img2').set('colortheme', 'globaltheme');
model.result.export('img2').set('customcolor', [1 1 1]);
model.result.export('img2').set('background', 'transparent');
model.result.export('img2').set('gltfincludelines', 'on');
model.result.export('img2').set('title1d', 'on');
model.result.export('img2').set('legend1d', 'on');
model.result.export('img2').set('logo1d', 'off');
model.result.export('img2').set('options1d', 'on');
model.result.export('img2').set('title2d', 'off');
model.result.export('img2').set('legend2d', 'on');
model.result.export('img2').set('logo2d', 'off');
model.result.export('img2').set('options2d', 'on');
model.result.export('img2').set('title3d', 'on');
model.result.export('img2').set('legend3d', 'on');
model.result.export('img2').set('logo3d', 'on');
model.result.export('img2').set('options3d', 'off');
model.result.export('img2').set('axisorientation', 'on');
model.result.export('img2').set('grid', 'on');
model.result.export('img2').set('axes1d', 'on');
model.result.export('img2').set('axes2d', 'off');
model.result.export('img2').set('showgrid', 'on');
model.result.export('img2').set('target', 'file');
model.result.export('img2').set('qualitylevel', '92');
model.result.export('img2').set('qualityactive', 'off');
model.result.export('img2').set('imagetype', 'png');
model.result.export('img2').set('lockview', 'off');
model.result.export('plot6').label('Particle Moisture Source Domain 9');
model.result.export('plot6').set('plotgroup', 'pg23');
model.result.export('plot6').set('plot', 'ptp1');
model.result.export('plot6').set('filename', ['C:\Users\Arthur Lepsien\Nextcloud\Spr' native2unicode(hex2dec({'00' 'fc'}), 'unicode') 'htrocknung\DMD\2D_Dryer\data\temperatureAndMoisture\validation\particles_domain9_moistureSourceData_withParticles.csv']);
model.result.export('plot6').set('separator', ',');
model.result.export('plot7').label('Particle Moisture Source Domain 10');
model.result.export('plot7').set('plotgroup', 'pg23');
model.result.export('plot7').set('plot', 'ptp2');
model.result.export('plot7').set('filename', ['C:\Users\Arthur Lepsien\Nextcloud\Spr' native2unicode(hex2dec({'00' 'fc'}), 'unicode') 'htrocknung\DMD\2D_Dryer\data\temperatureAndMoisture\validation\particles_domain10_moistureSourceData_withParticles.csv']);
model.result.export('plot7').set('separator', ',');
model.result.export('plot8').label('Particle Heat Source Data');
model.result.export('plot8').set('plotgroup', 'pg26');
model.result.export('plot8').set('plot', 'ptp1');
model.result.export('plot8').set('filename', ['C:\Users\Arthur Lepsien\Nextcloud\Spr' native2unicode(hex2dec({'00' 'fc'}), 'unicode') 'htrocknung\DMD\2D_Dryer\data\temperatureAndMoisture\validation\particles_heatData_withParticles.csv']);
model.result.export('plot8').set('separator', ',');
model.result.export('plot9').label('Outlet Temperature Probe Data');
model.result.export('plot9').set('plotgroup', 'pg27');
model.result.export('plot9').set('plot', 'ptgr1');
model.result.export('plot9').set('filename', ['C:\Users\Arthur Lepsien\Nextcloud\Spr' native2unicode(hex2dec({'00' 'fc'}), 'unicode') 'htrocknung\DMD\2D_Dryer\data\temperatureAndMoisture\validation\outlet_temperatureData_withParticles.csv']);
model.result.export('plot9').set('separator', ',');
model.result.export('plot10').label('Outlet Humidity Probe Data');
model.result.export('plot10').set('plotgroup', 'pg28');
model.result.export('plot10').set('plot', 'ptgr1');
model.result.export('plot10').set('filename', ['C:\Users\Arthur Lepsien\Nextcloud\Spr' native2unicode(hex2dec({'00' 'fc'}), 'unicode') 'htrocknung\DMD\2D_Dryer\data\temperatureAndMoisture\validation\outlet_humidityData_withParticles.csv']);
model.result.export('plot10').set('separator', ',');

out = model;
